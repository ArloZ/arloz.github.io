<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Arloz Blog</title>
  <subtitle>Arloz Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://arloz.github.io/"/>
  <updated>2016-03-09T03:58:49.000Z</updated>
  <id>http://arloz.github.io/</id>
  
  <author>
    <name>Arloz</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>velocity模板渲染之变量替换</title>
    <link href="http://arloz.github.io/2016/03/09/verlocity-render/"/>
    <id>http://arloz.github.io/2016/03/09/verlocity-render/</id>
    <published>2016-03-09T03:53:49.000Z</published>
    <updated>2016-03-09T03:58:49.000Z</updated>
    
    <content type="html">&lt;p&gt;velocity是在&lt;code&gt;spring mvc&lt;/code&gt;中，使用十分普遍的一种模板渲染引擎，&lt;/p&gt;
&lt;h3 id=&quot;现象&quot;&gt;&lt;a href=&quot;#现象&quot; class=&quot;headerlink&quot; title=&quot;现象&quot;&gt;&lt;/a&gt;现象&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;VelocityView配置&lt;code&gt;allowSessionOverride&lt;/code&gt;和&lt;code&gt;allowRequestOverride&lt;/code&gt;均为默认的false，即不把session和request中的属性同model中数据做合并。&lt;/li&gt;
&lt;li&gt;在Controller中往session和modelMap中分别设置属性&lt;code&gt;addAttribute&lt;/code&gt;，使用相同的key，vm模板中的key对应的变量最终渲染得到的值是session中的值&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;demo&quot;&gt;&lt;a href=&quot;#demo&quot; class=&quot;headerlink&quot; title=&quot;demo&quot;&gt;&lt;/a&gt;demo&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Controller&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;VelocityRenderController&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String TOKEN         = &lt;span class=&quot;string&quot;&gt;&quot;_token&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String TOKEN_NEW     = &lt;span class=&quot;string&quot;&gt;&quot;token-new&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String TOKEN_OLD     = &lt;span class=&quot;string&quot;&gt;&quot;token-old&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@RequestMapping&lt;/span&gt;(value = &lt;span class=&quot;string&quot;&gt;&quot;/velocity&quot;&lt;/span&gt;, method = RequestMethod.GET)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(HttpServletRequest request, ModelMap modelMap)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        HttpSession session = request.getSession();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        session.setAttribute(TOKEN, TOKEN_OLD);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        modelMap.addAttribute(TOKEN, TOKEN_NEW);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        modelMap.addAttribute(&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;world2&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;原因分析&quot;&gt;&lt;a href=&quot;#原因分析&quot; class=&quot;headerlink&quot; title=&quot;原因分析&quot;&gt;&lt;/a&gt;原因分析&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Spring请求处理&lt;/p&gt;
&lt;p&gt;  当一个http请求到达服务端后，通过&lt;code&gt;org.springframework.web.servlet.DispatcherServlet&lt;/code&gt;对请求进行分发处理，在调用handler处理一次请求之后得到结果ModelAndView&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Velocity模板渲染&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当&lt;code&gt;controller&lt;/code&gt;处理完一个请求之后，使用&lt;code&gt;org.springframework.web.servlet.DispatcherServlet#processDispatchResult&lt;/code&gt;对结果进行处理&lt;/li&gt;
&lt;li&gt;如果没有错误则调用&lt;code&gt;org.springframework.web.servlet.DispatcherServlet#render&lt;/code&gt;方法进行模板渲染，最终的渲染逻辑是从ModelAndView中获取View对象并使用其render方法&lt;code&gt;org.springframework.web.servlet.View#render&lt;/code&gt;进行渲染&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在渲染时首先通过&lt;code&gt;com.alipay.web.mvc.view.velocity.DefaultVelocityLayoutView#createVelocityContext&lt;/code&gt;方法创建&lt;code&gt;velocity&lt;/code&gt;的上下文，如下图：&lt;br&gt;&lt;img src=&quot;http://7xrny8.com1.z0.glb.clouddn.com/blog/1457495819616.png&quot; width=&quot;624&quot;&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;new VelocityContext&lt;/code&gt;的时候将modelMap中的数据存储到了context中，但是创建ChainedContext时,给context属性传入了空的数据，而将VelocityContext对象赋值给了innerContext属性，如下图：&lt;br&gt;&lt;img src=&quot;http://7xrny8.com1.z0.glb.clouddn.com/blog/1457495842082.png&quot; width=&quot;626&quot;&gt;&lt;/p&gt;
&lt;p&gt;至此，构造了velocity渲染的上下文对象，即当前对象context属性中没有model数据，而model数据存放在innerContext的属性中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;到模板进行渲染的时候，针对vm模板中的变量，通过&lt;code&gt;org.apache.velocity.runtime.parser.node.ASTReference#getVariableValue&lt;/code&gt;方法获取变量的值,如下图：&lt;br&gt;&lt;img src=&quot;http://7xrny8.com1.z0.glb.clouddn.com/blog/1457495862871.png&quot; width=&quot;629&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最关键的地方来了&lt;br&gt;&lt;img src=&quot;http://7xrny8.com1.z0.glb.clouddn.com/blog/1457495883658.png&quot; width=&quot;627&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xrny8.com1.z0.glb.clouddn.com/blog/1457495920117.png&quot; width=&quot;596&quot;&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;getVariableValue&lt;/code&gt;方法中，context属性是我们上面构造的&lt;code&gt;ChainedContext&lt;/code&gt;类型的对象，首先使用了&lt;code&gt;internalGet&lt;/code&gt;方法从当前对象的context属性来获取key对应的value，此时由于当前对象是ChainedContext，且在创建的时候context属性为空，所以通过key获取的value也是为空，这样就需要从request和session中去获取key对应的值，此时如果从session中获得了value，那么就不会从innerContext对象中去获取值了，还记得我们前面在构造VelocityContext时把model中的属性值设置到了innerContext中了。因此，VM模板中的变量渲染的值就是session中设置的值了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;velocity是在&lt;code&gt;spring mvc&lt;/code&gt;中，使用十分普遍的一种模板渲染引擎，&lt;/p&gt;
&lt;h3 id=&quot;现象&quot;&gt;&lt;a href=&quot;#现象&quot; class=&quot;headerlink&quot; title=&quot;现象&quot;&gt;&lt;/a&gt;现象&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Veloc
    
    </summary>
    
      <category term="spring" scheme="http://arloz.github.io/categories/spring/"/>
    
    
      <category term="velocity spring" scheme="http://arloz.github.io/tags/velocity-spring/"/>
    
  </entry>
  
  <entry>
    <title>使用 Hexo 轻松搭建博客</title>
    <link href="http://arloz.github.io/2016/03/07/hexo-setup/"/>
    <id>http://arloz.github.io/2016/03/07/hexo-setup/</id>
    <published>2016-03-07T15:23:34.000Z</published>
    <updated>2016-03-08T14:57:01.000Z</updated>
    
    <content type="html">&lt;p&gt;一直希望能够用MarkDown方便的写博客，工具用得爽了，写起来心情也会更好。&lt;/p&gt;
&lt;p&gt;之前使用&lt;code&gt;jekyll&lt;/code&gt;搭建静态博客并在github上托管，但是由于使用&lt;code&gt;jekyll&lt;/code&gt;的配置比较多且杂，而且对MarkDown的支持其实并不是很好，对代码块需要使用特有的标签，因此尝试使用&lt;code&gt;Hexo&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Hexo&lt;/code&gt;是一个基于node的静态博客框架，&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;详细文档&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Step-1-安装-amp-启动&quot;&gt;&lt;a href=&quot;#Step-1-安装-amp-启动&quot; class=&quot;headerlink&quot; title=&quot;Step 1 安装&amp;amp;启动&quot;&gt;&lt;/a&gt;Step 1 安装&amp;amp;启动&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装&lt;code&gt;node&lt;/code&gt;/&lt;code&gt;git&lt;/code&gt;请自行google&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;国内node的npm访问速度很慢，可以使用淘宝的node npm镜像：&lt;a href=&quot;http://npm.taobao.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://npm.taobao.org/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装&lt;code&gt;hexo&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g hexo-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用&lt;code&gt;hexo&lt;/code&gt;新建一个blog&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init demo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;本地启动&lt;code&gt;hexo&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;执行命令之后，即可通过浏览器访问本地的静态博客了，默认地址是：&lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Step-3-一些基本的配置&quot;&gt;&lt;a href=&quot;#Step-3-一些基本的配置&quot; class=&quot;headerlink&quot; title=&quot;Step 3 一些基本的配置&quot;&gt;&lt;/a&gt;Step 3 一些基本的配置&lt;/h3&gt;&lt;p&gt;&lt;code&gt;hexo&lt;/code&gt;的配置项均在&lt;code&gt;_config.yml&lt;/code&gt;文件中管理，可以配置站点的基本信息、站点主题样式、网址、目录等等内容，详细的配置可参见：&lt;a href=&quot;https://hexo.io/zh-cn/docs/configuration.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/zh-cn/docs/configuration.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Hexo&lt;/code&gt;提供了多种博客主题，可以进行自由的挑选：&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/themes/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Step-2-部署到github-pages&quot;&gt;&lt;a href=&quot;#Step-2-部署到github-pages&quot; class=&quot;headerlink&quot; title=&quot;Step 2 部署到github pages&quot;&gt;&lt;/a&gt;Step 2 部署到github pages&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Github pages&lt;/code&gt;可以用来托管静态网站，详细介绍：&lt;a href=&quot;https://pages.github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://pages.github.com/&lt;/a&gt;，如果要想将&lt;code&gt;Hexo&lt;/code&gt;框架创建的静态网站托管在&lt;code&gt;Github pages&lt;/code&gt;上，我们需要做以下的两个事情。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在Github上创建一个&lt;code&gt;Github pages&lt;/code&gt;的代码仓库，仓库的名称为&lt;code&gt;username.github.io&lt;/code&gt;，访问&lt;code&gt;http://username.github.io&lt;/code&gt;这个地址的时候就可以直接访问托管在&lt;code&gt;Github pages&lt;/code&gt;上的静态网站。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装hexo插件，用于将静态网站部署到&lt;code&gt;Github pages&lt;/code&gt;上&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置&lt;code&gt;hexo git&lt;/code&gt;插件信息，在&lt;code&gt;_config.xml&lt;/code&gt;文件中配置如下内容&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;deploy:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    type:&lt;/span&gt; git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    repo:&lt;/span&gt; git@github.com:username/username.github.io.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置好之后使用下面的命令就可以将博客部署到&lt;code&gt;Github pages&lt;/code&gt;上面了&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;使用hexo框架搭建个人博客就OK了，开始享受轻松写博客吧！&quot;&gt;&lt;a href=&quot;#使用hexo框架搭建个人博客就OK了，开始享受轻松写博客吧！&quot; class=&quot;headerlink&quot; title=&quot;使用hexo框架搭建个人博客就OK了，开始享受轻松写博客吧！&quot;&gt;&lt;/a&gt;使用hexo框架搭建个人博客就OK了，开始享受轻松写博客吧！&lt;/h5&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;一直希望能够用MarkDown方便的写博客，工具用得爽了，写起来心情也会更好。&lt;/p&gt;
&lt;p&gt;之前使用&lt;code&gt;jekyll&lt;/code&gt;搭建静态博客并在github上托管，但是由于使用&lt;code&gt;jekyll&lt;/code&gt;的配置比较多且杂，而且对MarkDown的支持其
    
    </summary>
    
      <category term="杂七杂八" scheme="http://arloz.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"/>
    
    
      <category term="config blog tool" scheme="http://arloz.github.io/tags/config-blog-tool/"/>
    
  </entry>
  
  <entry>
    <title>Mac开发环境配置</title>
    <link href="http://arloz.github.io/2015/09/08/mac-config/"/>
    <id>http://arloz.github.io/2015/09/08/mac-config/</id>
    <published>2015-09-08T14:40:19.000Z</published>
    <updated>2016-03-08T16:47:53.000Z</updated>
    
    <content type="html">&lt;p&gt;主要用于记录一些MAC上的个人的开发环境及工具的配置，留着以后备用,避免每次都去google.&lt;/p&gt;
&lt;h3 id=&quot;编辑器-Sublime-Text-3&quot;&gt;&lt;a href=&quot;#编辑器-Sublime-Text-3&quot; class=&quot;headerlink&quot; title=&quot;编辑器-Sublime Text 3&quot;&gt;&lt;/a&gt;编辑器-Sublime Text 3&lt;/h3&gt;&lt;h4 id=&quot;个人的一些默认配置&quot;&gt;&lt;a href=&quot;#个人的一些默认配置&quot; class=&quot;headerlink&quot; title=&quot;个人的一些默认配置&quot;&gt;&lt;/a&gt;个人的一些默认配置&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;通过cmd+,打开配置文件，配置内容如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 使光标闪动更加柔和&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;caret_style&amp;quot;: &amp;quot;phase&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 高亮当前行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;highlight_line&amp;quot;: true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 高亮有修改的标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;highlight_modified_tabs&amp;quot;: true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// The number of spaces a tab is considered equal to&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;tab_size&amp;quot;: 4,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Set to true to insert spaces when tab is pressed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;translate_tabs_to_spaces&amp;quot;: true,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;安装Sublime-Text的包管理器&quot;&gt;&lt;a href=&quot;#安装Sublime-Text的包管理器&quot; class=&quot;headerlink&quot; title=&quot;安装Sublime Text的包管理器&quot;&gt;&lt;/a&gt;安装Sublime Text的包管理器&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/installation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://packagecontrol.io/installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;配置MarkDown编辑环境&quot;&gt;&lt;a href=&quot;#配置MarkDown编辑环境&quot; class=&quot;headerlink&quot; title=&quot;配置MarkDown编辑环境&quot;&gt;&lt;/a&gt;配置MarkDown编辑环境&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;配置MarkDown高亮&lt;ul&gt;
&lt;li&gt;安装&lt;code&gt;Monokai Extended&lt;/code&gt;主题:&lt;code&gt;cmd+shift+p&lt;/code&gt;呼出提示命令，安装之&lt;/li&gt;
&lt;li&gt;选择应用&lt;code&gt;Monokai Extended&lt;/code&gt;主题：&lt;code&gt;Preference-&amp;gt;Color Scheme-&amp;gt;Monokai Extended&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;配置Markdown Preview&lt;ul&gt;
&lt;li&gt;安装&lt;code&gt;Markdown Preview&lt;/code&gt;插件：&lt;code&gt;cmd+shift+p&lt;/code&gt;呼出提示命令，安装之mark&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置 MarkDown预览快捷键&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择Preference-&amp;gt;Key Binding-User&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输入如下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;shift+super+m&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;markdown_preview&amp;quot;, &amp;quot;args&amp;quot;: &amp;#123; &amp;quot;target&amp;quot;: &amp;quot;browser&amp;quot;&amp;#125; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;SFTP插件&quot;&gt;&lt;a href=&quot;#SFTP插件&quot; class=&quot;headerlink&quot; title=&quot;SFTP插件&quot;&gt;&lt;/a&gt;SFTP插件&lt;/h4&gt;&lt;p&gt;通过该插件可以很方便的将文件上传到服务上，免除了不停scp的痛苦&lt;/p&gt;
&lt;p&gt;安装插件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cmd+shift+p&lt;/code&gt;呼出提示命令，输入&lt;code&gt;install package&lt;/code&gt;,然后搜索”sftp“即可&lt;/li&gt;
&lt;li&gt;安装完成后会打开配置文件，在其中配置需要同步上传文件的服务器地址、目标路径、用户名密码等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GBK编码显示&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;插件安装时搜索&lt;code&gt;ConvertToUTF8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Sublime3有可能会遇到解码错误，此时需要安装&lt;code&gt;Codecs33&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Git插件&quot;&gt;&lt;a href=&quot;#Git插件&quot; class=&quot;headerlink&quot; title=&quot;Git插件&quot;&gt;&lt;/a&gt;Git插件&lt;/h4&gt;&lt;p&gt;通过该插件可以在Sublime中直接使用git命令&lt;/p&gt;
&lt;p&gt;安装插件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;搜索安装GIT插件，此插件将git集成到了Sublime中&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cmd+shift+p&lt;/code&gt;呼出Sublime的命令行，然后输入GIT则可以看到能使用git命令了&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GIT:add&lt;/code&gt;:添加要提交的文件，&lt;code&gt;GIT：commit&lt;/code&gt;:输入提交注释后关闭窗口即可自动提交……&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;侧边栏管理文件&quot;&gt;&lt;a href=&quot;#侧边栏管理文件&quot; class=&quot;headerlink&quot; title=&quot;侧边栏管理文件&quot;&gt;&lt;/a&gt;侧边栏管理文件&lt;/h4&gt;&lt;p&gt;通过该插件可以直接对文件进行拖动、在finder打开等操作&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过control package安装即可，&lt;a href=&quot;https://github.com/titoBouzout/SideBarEnhancements&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SideBarEnhancements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;HTML插件Emmet&quot;&gt;&lt;a href=&quot;#HTML插件Emmet&quot; class=&quot;headerlink&quot; title=&quot;HTML插件Emmet&quot;&gt;&lt;/a&gt;HTML插件Emmet&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;可以用来快速的补全html，参考文档 &lt;a href=&quot;http://emmet.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://emmet.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Intellij-IDEA配置&quot;&gt;&lt;a href=&quot;#Intellij-IDEA配置&quot; class=&quot;headerlink&quot; title=&quot;Intellij IDEA配置&quot;&gt;&lt;/a&gt;Intellij IDEA配置&lt;/h2&gt;&lt;h4 id=&quot;配置新建文件的文件头及类描述&quot;&gt;&lt;a href=&quot;#配置新建文件的文件头及类描述&quot; class=&quot;headerlink&quot; title=&quot;配置新建文件的文件头及类描述&quot;&gt;&lt;/a&gt;配置新建文件的文件头及类描述&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CMD+,&lt;/code&gt;-&amp;gt;&lt;code&gt;File and Code Templates&lt;/code&gt;设置includes和Templates&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;添加getter、setter注释&quot;&gt;&lt;a href=&quot;#添加getter、setter注释&quot; class=&quot;headerlink&quot; title=&quot;添加getter、setter注释&quot;&gt;&lt;/a&gt;添加getter、setter注释&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在需要添加getter和setter的源文件中：&lt;code&gt;ctrl+enter&lt;/code&gt;弹出菜单选择&lt;code&gt;getter&lt;/code&gt;，然后在弹出对话框中添加一个getter模板（复制default模板的内容），新增如下内容：&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* Getter method for property &amp;lt;tt&amp;gt;$&amp;#123;field.name&amp;#125;&amp;lt;/tt&amp;gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* @return property value of $&amp;#123;field.name&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public ##&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if($field.modifierStatic)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  static ##&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$field.type ##&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#set($name = $StringUtil.capitalizeWithJavaBeanConvention($StringUtil.sanitizeJavaIdentifier($helper.getPropertyName($field, $project))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if ($field.boolean &amp;amp;&amp;amp; $field.primitive)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #if ($StringUtil.startsWithIgnoreCase($name, &amp;apos;is&amp;apos;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #set($name = $StringUtil.decapitalize($name))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    is##&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  get##&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;#123;name&amp;#125;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return $field.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;新增一个setter模板，方法同getter，添加内容如下：&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* Setter method for property &amp;lt;tt&amp;gt;$&amp;#123;field.name&amp;#125;&amp;lt;/tt&amp;gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* @param $&amp;#123;field.name&amp;#125; value to be assigned to property $&amp;#123;field.name&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#set($paramName = $helper.getParamName($field, $project))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public ##&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#if($field.modifierStatic)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  static ##&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void set$StringUtil.capitalizeWithJavaBeanConvention($StringUtil.sanitizeJavaIdentifier($helper.getPropertyName($field, $project)))($field.type $paramName) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #if ($field.name == $paramName)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #if (!$field.modifierStatic)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      this.##&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      $classname.##&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $field.name = $paramName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;自动生成serialVersionUID&quot;&gt;&lt;a href=&quot;#自动生成serialVersionUID&quot; class=&quot;headerlink&quot; title=&quot;自动生成serialVersionUID&quot;&gt;&lt;/a&gt;自动生成serialVersionUID&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;启用该项检查功能&lt;br&gt;  Setting-&amp;gt;Inspections-&amp;gt;Serialization issues-&amp;gt;Serializable class without ’serialVersionUID’&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在class定义处按 &lt;code&gt;alt+enter&lt;/code&gt; 即可自动生成&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在Tab中标识出修改过的文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;setting -&amp;gt; Editor -&amp;gt; editor Tabs -&amp;gt; Mark Modified Tabs…&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Mac-配置Java1-6开发环境&quot;&gt;&lt;a href=&quot;#Mac-配置Java1-6开发环境&quot; class=&quot;headerlink&quot; title=&quot;Mac 配置Java1.6开发环境&quot;&gt;&lt;/a&gt;Mac 配置Java1.6开发环境&lt;/h2&gt;&lt;h4 id=&quot;JDK1-6&quot;&gt;&lt;a href=&quot;#JDK1-6&quot; class=&quot;headerlink&quot; title=&quot;JDK1.6&quot;&gt;&lt;/a&gt;JDK1.6&lt;/h4&gt;&lt;p&gt;由于Oracl官方提供mac版本jdk是从1.7开始的，而在项目中需要使用jdk1.6，因此需要通过apple官方提供的jdk进行安装。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;apple官方jdk1.6下载并安装&lt;a href=&quot;https://support.apple.com/kb/DL1572?locale=zh_CN&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;地址&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;设置JAVA_HOME环境变量，Mac中通过&lt;code&gt;/usr/libexec/java_home&lt;/code&gt;命令能够进行java_home的管理，&lt;br&gt;如果添加参数&lt;code&gt;-v 1.6&lt;/code&gt; 可以得到jdk1.6的路径，默认输出1.8版本的jdk路径（如果有安装）。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;验证JDK安装：&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$java -version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;java version &amp;quot;1.6.0_65&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Java(TM) SE Runtime Environment (build 1.6.0_65-b14-466.1-11M4716)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Java HotSpot(TM) 64-Bit Server VM (build 20.65-b04-466.1, mixed mode)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Maven&quot;&gt;&lt;a href=&quot;#Maven&quot; class=&quot;headerlink&quot; title=&quot;Maven&quot;&gt;&lt;/a&gt;Maven&lt;/h4&gt;&lt;p&gt;想要在mac安装maven版本2.2.1，可以通过brew安装此版本，&lt;code&gt;brew install homebrew/versions/maven2&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;验证Maven安装：&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$mvn -version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Apache Maven 2.2.1 (r801777; 2009-08-07 03:16:01+0800)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Java version: 1.6.0_65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Java home: /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Default locale: zh_CN, platform encoding: EUC_CN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OS name: &amp;quot;mac os x&amp;quot; version: &amp;quot;10.10.3&amp;quot; arch: &amp;quot;x86_64&amp;quot; Family: &amp;quot;mac&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;配置淘宝ruby镜像&quot;&gt;&lt;a href=&quot;#配置淘宝ruby镜像&quot; class=&quot;headerlink&quot; title=&quot;配置淘宝ruby镜像&quot;&gt;&lt;/a&gt;配置淘宝ruby镜像&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://ruby.taobao.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ruby.taobao.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;配置git&quot;&gt;&lt;a href=&quot;#配置git&quot; class=&quot;headerlink&quot; title=&quot;配置git&quot;&gt;&lt;/a&gt;配置git&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;git config –global push.default simple&lt;/li&gt;
&lt;li&gt;git config –global alias.st status&lt;/li&gt;
&lt;li&gt;git config –global alias.co checkout&lt;/li&gt;
&lt;li&gt;git config –global user.name “xxx”&lt;/li&gt;
&lt;li&gt;git config –global user.email “xxx”&lt;/li&gt;
&lt;li&gt;git config –global core.editor /usr/bin/vim &lt;code&gt;解决通过vi提交时报错：error: There was a problem with the editor &amp;#39;vi&amp;#39;.&lt;/code&gt;&lt;br&gt;  参见：&lt;a href=&quot;http://blog.csdn.net/forever_crying/article/details/8641545&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/forever_crying/article/details/8641545&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;iTerm2配置自动ssh登录服务器免输密码&quot;&gt;&lt;a href=&quot;#iTerm2配置自动ssh登录服务器免输密码&quot; class=&quot;headerlink&quot; title=&quot;iTerm2配置自动ssh登录服务器免输密码&quot;&gt;&lt;/a&gt;iTerm2配置自动ssh登录服务器免输密码&lt;/h2&gt;&lt;p&gt;通常是使用ssh登录服务器的时候是需要密码的，但是作为懒人的我们的是不喜欢总是输入密码，之前使用securitCRT的时候是可以保存密码的，但是转成iTerm2之后没有保存密码的功能了，这样需要使用脚本来实现了，一段expect脚本如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/expect&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# args check&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if &amp;#123;$argc != 3&amp;#125; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    puts &amp;quot;-------------------------------------&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    puts &amp;quot;Usage:&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    puts &amp;quot;    auto input password when ssh host&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    puts &amp;quot;    sshexpect.sh user host pwd&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    puts &amp;quot;-------------------------------------&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    exit 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set timeout 30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spawn ssh [lindex $argv 0]@[lindex $argv 1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;expect &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;(yes/no)?&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;send &amp;quot;yes\n&amp;quot;;exp_continue&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;password:&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;send &amp;quot;[lindex $argv 2]\n&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;interact&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将该段脚本放置在&lt;code&gt;/usr/local/bin/&lt;/code&gt;目录下之后，就可以使用命令&lt;code&gt;login.sh username hostname pwd&lt;/code&gt;的方式来登录了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当然如果是经常登录同一台服务器的话，可以直接使用ssh 公钥的方式实现啦。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;还有一种情况就是登录服务器的时候密码是通过token校验的，每次登录时token都是不相同的，那这样就只能输入密码了，而不能使用上面的自动登录脚本，但是如果需要开多个终端tab来登录同一个服务器的话，作为懒人的我们的当然是不愿意输入多次密码的啦。这就需要类似securitCRT中复制会话的功能啦，要实现这个功能只需要创建&lt;code&gt;~/.ssh/config&lt;/code&gt;文件&lt;a href=&quot;http://linux.die.net/man/5/ssh_config&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考链接&lt;/a&gt;，并在文件中作如下配置即可：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;host *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ControlMaster auto&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ControlPath ~/.ssh/master-%r@%h:%p&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样配置以后，只要是登录同样hostname的服务器，就可以自动copy当前建立的soket而不需要再次输入密码了。如果这样配置，再加上使用前面的自动登录脚本，会出现卡住的情况，原因很简单，前面的自动登录脚本是等待终端输出类似password字样，然后输入密码，配置了&lt;code&gt;~/.ssh/config&lt;/code&gt;之后，是直接复制会话登录，就不会出现再次需要输入密码的情况了，所以导致卡住，这种情况可以不配置&lt;code&gt;host *&lt;/code&gt;而配置成&lt;code&gt;host hostname&lt;/code&gt;的形式，指定特定的机器复制会话，而其他的机器使用原来的登录脚本。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;主要用于记录一些MAC上的个人的开发环境及工具的配置，留着以后备用,避免每次都去google.&lt;/p&gt;
&lt;h3 id=&quot;编辑器-Sublime-Text-3&quot;&gt;&lt;a href=&quot;#编辑器-Sublime-Text-3&quot; class=&quot;headerlink&quot; title=&quot;编
    
    </summary>
    
      <category term="config" scheme="http://arloz.github.io/categories/config/"/>
    
    
      <category term="config mac" scheme="http://arloz.github.io/tags/config-mac/"/>
    
  </entry>
  
  <entry>
    <title>Tornado搭建stepByStep</title>
    <link href="http://arloz.github.io/2015/07/25/tornado-setup/"/>
    <id>http://arloz.github.io/2015/07/25/tornado-setup/</id>
    <published>2015-07-25T03:01:30.000Z</published>
    <updated>2016-03-08T16:45:40.000Z</updated>
    
    <content type="html">&lt;p&gt;由于需要在本地搭建一个轻量级的web服务，用来提供一些Web页面小工具，最近工作一直使用java，但是又不想落下Python，所以选择Tornado来进行这个小工具页面的服务的开发，至少保持不对Python生疏。下面进入正题，StepByStep的搭建一个Tornado服务，详情参见&lt;a href=&quot;http://www.tornadoweb.org/en/stable/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;下载安装最新版本的Tornado&quot;&gt;&lt;a href=&quot;#下载安装最新版本的Tornado&quot; class=&quot;headerlink&quot; title=&quot;下载安装最新版本的Tornado&quot;&gt;&lt;/a&gt;下载安装最新版本的Tornado&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;通过命令安装&lt;code&gt;easy_install tornado&lt;/code&gt;，简单方便&lt;/li&gt;
&lt;li&gt;下载源码安装：&lt;a href=&quot;https://pypi.python.org/packages/source/t/tornado/tornado-4.2.1.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;源码&lt;/a&gt;，解压后执行&lt;code&gt;sudo python setup.py install&lt;/code&gt;即可&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;简单粗暴HelloWorld&quot;&gt;&lt;a href=&quot;#简单粗暴HelloWorld&quot; class=&quot;headerlink&quot; title=&quot;简单粗暴HelloWorld&quot;&gt;&lt;/a&gt;简单粗暴HelloWorld&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;新建一个工程目录及文件&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir mytool&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd mytool&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch server.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在&lt;code&gt;server.py&lt;/code&gt;文件中输入以下内容&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; tornado.ioloop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; tornado.web&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainHandler&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(tornado.web.RequestHandler)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.write(&lt;span class=&quot;string&quot;&gt;&quot;Hello, world&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;application = tornado.web.Application([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;string&quot;&gt;r&quot;/&quot;&lt;/span&gt;, MainHandler),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    application.listen(&lt;span class=&quot;number&quot;&gt;8888&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tornado.ioloop.IOLoop.current().start()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行服务&lt;br&gt;通过命令&lt;code&gt;python server.py&lt;/code&gt;执行，然后在浏览器访问&lt;code&gt;http://localhost:8888/&lt;/code&gt;即可看到helloworld了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至此一个简单的Tornado服务已经搭建好了，是不是特别简单~~That’s it！&lt;/p&gt;
&lt;h3 id=&quot;Tornado简单介绍&quot;&gt;&lt;a href=&quot;#Tornado简单介绍&quot; class=&quot;headerlink&quot; title=&quot;Tornado简单介绍&quot;&gt;&lt;/a&gt;Tornado简单介绍&lt;/h3&gt;&lt;p&gt;从上面的Helloworld程序来看，首先我们创建了一个继承自&lt;code&gt;tornado.web.RequestHandler&lt;/code&gt;的类&lt;code&gt;MainHandler&lt;/code&gt;，这个类就是用来处理HTTP请求的，在&lt;code&gt;MainHandler&lt;/code&gt;类中定义了一个get方法，直觉告诉我们，这就是用来处理Http的GET请求的，你还可以定义个post方法，用来处理HTTP的POST请求。&lt;/p&gt;
&lt;p&gt;然后我们定义了一个&lt;code&gt;Application&lt;/code&gt;对象，并且传入了一个参数（列表中仅包含一个元组），这个参数的含义就是将HTTP的请求的&lt;code&gt;/&lt;/code&gt;目录映射给&lt;code&gt;MainHandler&lt;/code&gt;，也就是说，所有的根目录请求都由&lt;code&gt;MainHandler来处理&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;最后我们让&lt;code&gt;application&lt;/code&gt;监听8888端口，然后启动Tornado，想了解IOLoop请&lt;a href=&quot;http://www.oschina.net/question/565065_79182&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;移步&lt;/a&gt;。至此Tornado将会监听8888端口的请求，当收到请求时就将其分发给&lt;code&gt;RequestHandler&lt;/code&gt;来处理。&lt;/p&gt;
&lt;h3 id=&quot;增加一些功能&quot;&gt;&lt;a href=&quot;#增加一些功能&quot; class=&quot;headerlink&quot; title=&quot;增加一些功能&quot;&gt;&lt;/a&gt;增加一些功能&lt;/h3&gt;&lt;p&gt;helloworld确实十分简单粗暴，很容易就写出了自己的web服务，是不是很嗨森，但是在一步步往web服务里面增加功能的时候，你一会需要下面的这些简单方便的功能。&lt;/p&gt;
&lt;h4 id=&quot;Tornado模板&quot;&gt;&lt;a href=&quot;#Tornado模板&quot; class=&quot;headerlink&quot; title=&quot;Tornado模板&quot;&gt;&lt;/a&gt;Tornado模板&lt;/h4&gt;&lt;p&gt;在前面的HelloWorld中我们直接在Python代码里面输出了字符串到页面上，但是通常来说我们的页面不会简单到只有那么短的字符串，这个时候我们就可以把每一个页面写成HTML文件，在处理请求的时候把处理的数据填充到我们的HTML文件中，再返回这个文件就行，这个时候就需要Tornado的模板系统了。&lt;br&gt;所谓模板就是我们写的HTML文件，处理请求时通过模板系统将数据和模板渲染成最终的HTML页面返回给浏览器。在模板中可以使用跟Python相同的&lt;code&gt;if,for,while,try&lt;/code&gt;等语句。如下示例：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; title &amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#123;% for item in items %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123;&quot;&amp;#123;&amp;#123; item &quot;&amp;#125;&amp;#125;&amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#123;%end%&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的&lt;code&gt;{{}}&lt;/code&gt;标签是指输出python中的变量title，&lt;code&gt;{% for item in items %}&lt;/code&gt;,&lt;code&gt;{% end %}&lt;/code&gt;语句块是循环变量python列表items的每一个元素，并输出一行，把上面的内容保存为template.html，然后在相同目录下就可以通过下面的方式来渲染模板文件了：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainHandler&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(tornado.web.RequestHandler)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        items = [&lt;span class=&quot;string&quot;&gt;&quot;Item 1&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Item 2&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Item 3&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.render(&lt;span class=&quot;string&quot;&gt;&quot;template.html&quot;&lt;/span&gt;, title=&lt;span class=&quot;string&quot;&gt;&quot;My title&quot;&lt;/span&gt;, items=items)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另一方面咱们常见的网页通常都是有页面的头部、内容、尾部组成，头部和尾部在同一网站多个不同内容页面基本是保持一致不怎么变化的，那么从设计的角度，这些公共的代码部分最好是能够通用，Tornado模板也提供了这样的功能。如下示例：&lt;/p&gt;
&lt;p&gt;首先我们创建页面的头部模板：header.html&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this is header....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后创建尾部模板：footer.html&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this is footer....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后创建一个最基本的base.html模板文件，其中通过&lt;code&gt;include&lt;/code&gt;标签引入了header.html和footer.html两个文本文件，那么在渲染的时候则会将头部和尾部模板添加到最终的结果中。通过&lt;code&gt;block&lt;/code&gt;标签定义了可以在后续的模板中来填充的部分&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;My Tools&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;%include header.html%&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;%block content%&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;%end%&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;%include footer.html%&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后我们定义一个我们需要最终渲染的页面：index.html&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;%extends base.html%&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;%block content%&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    This is content&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;%end%&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在index.html文件中，通过&lt;code&gt;extends&lt;/code&gt;标签“继承”了base.html模板，然后通过&lt;code&gt;block&lt;/code&gt;标签来填充base.html定义时预留的内容块，最后通过下面的语句渲染index.html模板得到最终在页面显示的html文档。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainHandler&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(tornado.web.RequestHandler)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.render(&lt;span class=&quot;string&quot;&gt;&#39;index.html&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上所有的模板文件和python文件都必须位于同一目录，这样当然很不便于文件的管理，因此自定义application的时候可以指定模板文件的路径。&lt;/p&gt;
&lt;h4 id=&quot;静态资源文件&quot;&gt;&lt;a href=&quot;#静态资源文件&quot; class=&quot;headerlink&quot; title=&quot;静态资源文件&quot;&gt;&lt;/a&gt;静态资源文件&lt;/h4&gt;&lt;p&gt;一个web服务处理每一次的动态处理用户请求之后还有很多静态资源，比如javascript文件、css文件、icon文件等等，他们只需要加载到浏览器中，由浏览器渲染即可，而不需要在服务器上做任何的处理。通常来说这些静态文件都有专门的静态资源服务器（如nginx、Apache）提供，但在我们的这个简单的web服务中还不需要去配置他们，可以直接使用Tornado内置的专门进行静态资源管理的功能，使用他们很简单，只需要配置一个&lt;code&gt;StaticFileHandler&lt;/code&gt;，然后通过正则表达式指定哪些请求使用静态资源服务即可，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(tornado.web.Application)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        settings = dict(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            template_path = SETTINGS.TEMPLATE_DIR,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            static_path = SETTINGS.STATIC_DIR,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            debug = SETTINGS.DEBUG,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        handlers = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (&lt;span class=&quot;string&quot;&gt;r&quot;/&quot;&lt;/span&gt;,MainHandler),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (&lt;span class=&quot;string&quot;&gt;r&quot;/static/(.*)&quot;&lt;/span&gt;,tornado.web.StaticFileHandler,dict(path=settings[&lt;span class=&quot;string&quot;&gt;&#39;static_path&#39;&lt;/span&gt;])),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tornado.web.Application.__init__(self, handlers, **settings)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app = Application()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app.listen(&lt;span class=&quot;number&quot;&gt;8888&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tornado.ioloop.IOLoop.instance().start()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在模板文件中引用静态资源：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;&amp;#123;static_url(&#39;js/jquery-1.10.2.min.js&#39;)&amp;#125;&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里与Helloworld不同，我们定义了&lt;code&gt;Application&lt;/code&gt;类继承自&lt;code&gt;tornado.web.Application&lt;/code&gt;，然后在初始化的时候进行了一些配置，如&lt;code&gt;template_path&lt;/code&gt;模板文件路径，&lt;code&gt;static_path&lt;/code&gt;静态资源文件的路径，然后在URL映射的地方配置了所有&lt;code&gt;static&lt;/code&gt;开头的请求都使用静态文件资源来处理。最后在html模板文件中通过&lt;code&gt;static_url&lt;/code&gt;标签来引用静态资源，这个标签会在静态资源请求链接中加上一个版本号，如果没有修改静态资源文件，版本号就不会改变，那么浏览器在请求该资源的时候会优先从本地缓存中获取，当缓存中获取不到时，才从服务请求。&lt;/p&gt;
&lt;p&gt;至此一个简单的基于Tornado的web服务就搭建好了，下面就开始我的小工具功能开发啦 ~~&lt;/p&gt;
&lt;p&gt;如有错误，欢迎指正。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;由于需要在本地搭建一个轻量级的web服务，用来提供一些Web页面小工具，最近工作一直使用java，但是又不想落下Python，所以选择Tornado来进行这个小工具页面的服务的开发，至少保持不对Python生疏。下面进入正题，StepByStep的搭建一个Tornado服务
    
    </summary>
    
      <category term="install&configure" scheme="http://arloz.github.io/categories/install-configure/"/>
    
    
      <category term="tornado" scheme="http://arloz.github.io/tags/tornado/"/>
    
  </entry>
  
  <entry>
    <title>使用DigitalOcean搭建PPTPD的VPN服务</title>
    <link href="http://arloz.github.io/2015/01/10/init-use-digitalOcean/"/>
    <id>http://arloz.github.io/2015/01/10/init-use-digitalOcean/</id>
    <published>2015-01-10T11:23:45.000Z</published>
    <updated>2016-03-08T16:37:04.000Z</updated>
    
    <content type="html">&lt;p&gt;要自己搭建独立的VPN服务实现翻墙，首先需要有能够访问国外VPS，然后在VPS中安装VPN软件即可。&lt;br&gt;目前国外VPS比较好用的主要有Linode和DigitalOcean，其中DigitalOcean的性价比相对更高，&lt;br&gt;本文以DigitalOcean为例进行介绍。&lt;a href=&quot;https://www.digitalocean.com/?refcode=d127d9afd5f3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DigitalOcean注册&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;1、注册DigitalOcean并创建VPS&quot;&gt;&lt;a href=&quot;#1、注册DigitalOcean并创建VPS&quot; class=&quot;headerlink&quot; title=&quot;1、注册DigitalOcean并创建VPS&quot;&gt;&lt;/a&gt;1、注册DigitalOcean并创建VPS&lt;/h3&gt;&lt;p&gt;进入官网&lt;a href=&quot;https://www.digitalocean.com/?refcode=d127d9afd5f3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DigitalOcean&lt;/a&gt;后注册账户，邮件激活后需要填写信用卡信息或通过Paypal充值5刀，完成此步骤后很有可能发生账户被锁的情况，此时只需根据提示填写相关信息后等待处理。&lt;/p&gt;
&lt;p&gt;解锁账户后（或者压根儿没被锁过）则可以直接创建droplet，创建时选择Ubuntu，机房选择新加坡或者旧金山，关于各机房速度的差别可以自行创建多个droplet进行测试。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果是学生用户，可以使用github提供的100刀的优惠券，&lt;a href=&quot;https://education.github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击这里&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;2、VPS初始化配置&quot;&gt;&lt;a href=&quot;#2、VPS初始化配置&quot; class=&quot;headerlink&quot; title=&quot;2、VPS初始化配置&quot;&gt;&lt;/a&gt;2、VPS初始化配置&lt;/h3&gt;&lt;p&gt;初始创建的VPS可以直接通过root账户登录（登录密码会发送到注册时的邮箱中），然而在使用Linux的过程中通常不直接使用root账户，以免造成一些安全问题，因此当我们用root账户登录之后首先新创建一个用户，通过下面的命令则可以添加用户。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ adduser username&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在Ubuntu中可以通过使用&lt;code&gt;sudo&lt;/code&gt;命令来使普通用户进行需要root权限的操作，因此我们把创建的用户添加到&lt;code&gt;sudo&lt;/code&gt;用户组。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ gpasswd &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt; username sudo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至此一个具有&lt;code&gt;sudo&lt;/code&gt;权限的账户则创建成功了，我们退出root账户，改用刚刚创建的用户进行登录。另外，由于VPS处于公网，最好是通过公钥秘钥的方式来登录机器从而避免用户密码泄露等安全问题，在mac机器上生成ssh密钥对直接通过以下命令即可。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ssh-keygen  &lt;span class=&quot;comment&quot;&gt;#可以直接回车都默认信息即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将 &lt;code&gt;~/.ssh/id_rsa.pub&lt;/code&gt;中的内容复制到VPS机器上的&lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;文件中，并将&lt;code&gt;authorized_keys&lt;/code&gt;文件的权限改为400：&lt;code&gt;chmod 400 ~/.ssh/authorized_keys&lt;/code&gt;，至此则可以通过ssh无密码登陆VPS：&lt;code&gt;ssh username@hostname&lt;/code&gt;了。&lt;/p&gt;
&lt;p&gt;将文件 &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;中的&lt;code&gt;PasswordAuthentication&lt;/code&gt;后面的yes修改为no，并去掉前面的注释#。重启ssh服务 &lt;code&gt;sudo service ssh restart&lt;/code&gt;之后则不能通过用户名密码的方式登陆了。这样设置之后如果ssh密钥对丢失，仍然可以通过DigitalOcean提供的VNC方式登陆机器，设置新的密钥对。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;推荐一个十分强大的bas：&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;oh-my-zsh&lt;/a&gt;，可以通过以下命令安装。&lt;/p&gt;
&lt;p&gt;sudo apt-get install zsh git&lt;/p&gt;
&lt;p&gt;git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh&lt;/p&gt;
&lt;p&gt;cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc&lt;/p&gt;
&lt;p&gt;chsh -s /bin/zsh&lt;/p&gt;
&lt;p&gt;至此重新开启一个会话则可以使用zsh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;3、安装pptpd服务&quot;&gt;&lt;a href=&quot;#3、安装pptpd服务&quot; class=&quot;headerlink&quot; title=&quot;3、安装pptpd服务&quot;&gt;&lt;/a&gt;3、安装pptpd服务&lt;/h3&gt;&lt;p&gt;在DigitalOcean上安装配置pptpd的VPN服务，&lt;a href=&quot;http://www.zhihu.com/question/20113381&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考这里&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;安装pptpd（VPN服务器）和ufw（防火墙）软件&quot;&gt;&lt;a href=&quot;#安装pptpd（VPN服务器）和ufw（防火墙）软件&quot; class=&quot;headerlink&quot; title=&quot;安装pptpd（VPN服务器）和ufw（防火墙）软件&quot;&gt;&lt;/a&gt;安装pptpd（VPN服务器）和ufw（防火墙）软件&lt;/h4&gt;&lt;p&gt;执行以下命令即可。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install pptpd ufw&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;修改ufw规则&quot;&gt;&lt;a href=&quot;#修改ufw规则&quot; class=&quot;headerlink&quot; title=&quot;修改ufw规则&quot;&gt;&lt;/a&gt;修改ufw规则&lt;/h4&gt;&lt;p&gt;添加需要的端口 22、1723，其中22端口为ssh登录端口，1723为pptpd服务的默认端口号。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo ufw allow 22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo ufw allow 1723&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo ufw &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果VPS还有其他的端口需要使用，则同样需要添加对应的端口。同时需要将文件&lt;code&gt;/etc/sysctl.conf&lt;/code&gt;中对应行的注释去掉，以支持ipv4的转发，如下所示。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;net.ipv4.ip_forward=1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/default/ufw&lt;/code&gt;文件，修改如下。将文件中的&lt;code&gt;DEFAULT_FORWARD_POLICY = &amp;quot;DROP&amp;quot;&lt;/code&gt;修改为&lt;code&gt;DEFAULT_FORWARD_POLICY = &amp;quot;ACCEPT&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在文件&lt;code&gt;/etc/ufw/before.rules&lt;/code&gt;的开头处添加如下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# NAT table rules&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*nat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;:POSTROUTING ACCEPT [0:0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Allow forward traffic to eth0 开启ipv4转发&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 此处的192.168。1.0/24 需要与前面设置的remoteip对应&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-A POSTROUTING -s 192.168.1.0/24 -o eth0 -j MASQUERADE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Process the NAT table rules&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;COMMIT&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;编辑pptpd相关配置&quot;&gt;&lt;a href=&quot;#编辑pptpd相关配置&quot; class=&quot;headerlink&quot; title=&quot;编辑pptpd相关配置&quot;&gt;&lt;/a&gt;编辑pptpd相关配置&lt;/h4&gt;&lt;p&gt;打开文件&lt;code&gt;/etc/ppp/pptpd-options&lt;/code&gt;，修改如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 注释掉以下三行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;refuse-pap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;refuse-chap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;refuse-mschap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 修改DNS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ms-dns 8.8.8.8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ms-dns 8.8.4.4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开文件&lt;code&gt;/etc/pptpd.conf&lt;/code&gt;，配置服务器和客户端的IP地址，修改如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;localip vps-ip # 此处为VPS服务器的公网IP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remoteip 192.168.1.234-238,192.168.1.245 #此IP为分配给VPN客户端的可用ip地址&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开文件&lt;code&gt;/etc/ppp/chap-secrets&lt;/code&gt;，配置VPN服务的用户名和密码，一行代表一个用户，格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# [username][service][password][allow-ip]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test pptpd passwd *&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上配置修改完成后，重启pptpd和ufw服务，使用如下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo sysctl -p      &lt;span class=&quot;comment&quot;&gt;# 使系统ip转发功能生效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo ufw &lt;span class=&quot;built_in&quot;&gt;disable&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;# &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo ufw &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt;     &lt;span class=&quot;comment&quot;&gt;# 重启ufw服务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo service pptpd restart &lt;span class=&quot;comment&quot;&gt;# 重启pptpd服务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;4、mac设置VPN连接&quot;&gt;&lt;a href=&quot;#4、mac设置VPN连接&quot; class=&quot;headerlink&quot; title=&quot;4、mac设置VPN连接&quot;&gt;&lt;/a&gt;4、mac设置VPN连接&lt;/h3&gt;&lt;p&gt;按照以上方式配置完成pptpd服务后，如无意外，则可以进行科学上网了。在MAC下可以通过如下方式添加VPN配置&lt;/p&gt;
&lt;p&gt;打开&lt;code&gt;网络偏好设置&lt;/code&gt;-&amp;gt;&lt;code&gt;点击左下角的加号+创建一个新服务&lt;/code&gt;-&amp;gt;&lt;code&gt;添加VPN配置&lt;/code&gt;填写相关信息，最后在VPN配置页面选择&lt;code&gt;高级&lt;/code&gt;中&lt;code&gt;转发所有数据包&lt;/code&gt;。Enjoy！！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;要自己搭建独立的VPN服务实现翻墙，首先需要有能够访问国外VPS，然后在VPS中安装VPN软件即可。&lt;br&gt;目前国外VPS比较好用的主要有Linode和DigitalOcean，其中DigitalOcean的性价比相对更高，&lt;br&gt;本文以DigitalOcean为例进行介绍
    
    </summary>
    
      <category term="install&configure" scheme="http://arloz.github.io/categories/install-configure/"/>
    
    
      <category term="DigitalOcean VPN VPS PPTPD" scheme="http://arloz.github.io/tags/DigitalOcean-VPN-VPS-PPTPD/"/>
    
  </entry>
  
  <entry>
    <title>常用排序算法</title>
    <link href="http://arloz.github.io/2014/09/18/sort-alg/"/>
    <id>http://arloz.github.io/2014/09/18/sort-alg/</id>
    <published>2014-09-18T10:29:23.000Z</published>
    <updated>2016-03-08T16:31:27.000Z</updated>
    
    <content type="html">&lt;p&gt;排序对于处理很多问题都可以提供一些便利，在日常生活中也常常进行排序（城市排名、大学排名、个人财富排名）等等。&lt;br&gt;对于排序算法，更是学习编程肯定会遇到的一种问题，常见的排序算法有：插入排序、冒泡排序、归并排序、堆排序、&lt;br&gt;希尔排序、快速排序等等等，十分丰富和强大。&lt;/p&gt;
&lt;h3 id=&quot;插入排序&quot;&gt;&lt;a href=&quot;#插入排序&quot; class=&quot;headerlink&quot; title=&quot;插入排序&quot;&gt;&lt;/a&gt;插入排序&lt;/h3&gt;&lt;p&gt;插入排序首先比较数组的前两个元素data[0]和data[1]，如有必要则进行交换，然后再取data[2]从0位置元素开始比较，找到其合适的位置，&lt;br&gt;此时将该位置及其后的元素都向后移动，把data[2]插入到位置，这就是插入排序名字的由来。其整个排序过程如图示：&lt;br&gt;&lt;img src=&quot;http://7xrny8.com1.z0.glb.clouddn.com/blog/1457454286644.png&quot; width=&quot;704&quot;&gt;&lt;br&gt;如图示，原始数组如a所示，首先取数组的前两个元素1，4，正好是升序，不用交换位置(行b)，然后取第三个元素5，将从头开始与已有的前两个元素依次比较，&lt;br&gt;均大于他们，则5放置在第三个位置（如行c），然后取第四个元素2，从头依次比较，其大于1，小于4，则将其插入到4所在的位置，在插入之前，&lt;br&gt;需要将4、5两个元素分别向后移动一个位置（如行d），然后再取第五个元素7，从头依次比较，均大于前面的元素，则放置在第五个位置（如行e），&lt;br&gt;再取第六个元素3，从头依次比较后，放置在第三个位置，在插入之前，需要将后面的元素均向后移动一个位置（如行f），再取第七个元素6，从头依次比较，&lt;br&gt;发现其大于5小于7，则将7向后移动一个位置，将6插入在此位置（如行g），至此排序完成。该排序算法的伪代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;insert_sorting()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; 元素 in 数组&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        从头依次比较，找到插入位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        将该位置后的元素向后移动一个位置，插入该元素&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该算法时间复杂度是O(n&lt;sup&gt;2&lt;/sup&gt;)，最好情况是数组本来是有序的，则复杂度为O(n)&lt;/p&gt;
&lt;h3 id=&quot;选择排序&quot;&gt;&lt;a href=&quot;#选择排序&quot; class=&quot;headerlink&quot; title=&quot;选择排序&quot;&gt;&lt;/a&gt;选择排序&lt;/h3&gt;&lt;p&gt;选择排序的基本思路是：首先选择数组中的最小的元素，将其与第一个元素交换，然后选择除第一个元素外剩下元素的最小的元素，将其与第二个元素交换，&lt;br&gt;然后再选择剩余元素中最小的元素将其与第三个元素交换，以此进行下去，直到执行了n-1次即可停止，这时数组就排好序了，之所以不执行最后一次，&lt;br&gt;是因为当只剩下最后一个元素的时候，该元素必然是最大的元素，只能放在最后一个位置处。其整个过程如图示：&lt;br&gt;&lt;img src=&quot;http://7xrny8.com1.z0.glb.clouddn.com/blog/1457454341854.png&quot; width=&quot;675&quot;&gt;&lt;/p&gt;
&lt;p&gt;该排序算法的伪代码如下：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;select_sorting()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; 到 n&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        选择第i个之后剩余元素中最小的元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        交换其与第i个元素&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该算法的复杂度是O(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/p&gt;
&lt;h3 id=&quot;冒泡排序&quot;&gt;&lt;a href=&quot;#冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;冒泡排序&quot;&gt;&lt;/a&gt;冒泡排序&lt;/h3&gt;&lt;p&gt;如果把一个数组想象成一个垂直的柱体，那么每一个元素当做一个气泡，对于每个气泡而言，如果气泡越轻，那么就会往上升，最轻的气泡在最顶，最重的气泡&lt;br&gt;则在最低端，这样的柱体中的气泡就都是有序排列的了。冒泡排序则是这样的一个实现过程，如图示：&lt;br&gt;&lt;img src=&quot;http://7xrny8.com1.z0.glb.clouddn.com/blog/1457454520975.png&quot; width=&quot;709&quot;&gt;&lt;/p&gt;
&lt;p&gt;如图示，首先比较底部的两个元素5和6，他们逆序，则交换他们的位置(如a-&amp;gt;b)，然后比较之后的两个元素5和1，他们顺序ok，不用交换，接着再比较1和2，他们逆序，&lt;br&gt;交换这两个元素(如b-&amp;gt;c)，再接着比较元素1和4，他们逆序，交换这两个元素(如c-&amp;gt;d)，接着再比较1和3，他们仍然逆序，交换这两个元素(如d-&amp;gt;e)，&lt;br&gt;至此所有元素都进行过了比较，此时最小的元素1已经排在顶部了，接下来继续从最底部的两个元素依次向上进行比较，直到比较到顶部第二个元素停止，&lt;br&gt;依次一直比较完，所有元素就完成排序了。&lt;br&gt;该算法伪代码如下：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bubble_sorting()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; 到 n&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j=n&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt; 到 i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            如果j 和j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt; 逆序则交换他们&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该算法的复杂度仍然为O(n&lt;sup&gt;2&lt;sup&gt;)&lt;/sup&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h3 id=&quot;希尔排序&quot;&gt;&lt;a href=&quot;#希尔排序&quot; class=&quot;headerlink&quot; title=&quot;希尔排序&quot;&gt;&lt;/a&gt;希尔排序&lt;/h3&gt;&lt;p&gt;前述的基本排序算法的复杂度都达到了O(n&lt;sup&gt;2&lt;/sup&gt;)，显然太大，因此必须打破这个限制，改善算法效率。从上面的基本排序算法我们可以知道随着序列长度N的增加，&lt;br&gt;算法的时间会增长得更快，同时对于已经是有序的序列进行排序的时候可以明显减少比较或者交换元素位置的次数，基于这两种情况，我们可以想象如果&lt;br&gt;将一个很长的序列分成短一些的多个子序列，对每个子序列进行排序（序列较短，时间消耗相对少），然后再将整个序列进行排序（子序列都是相对有序的，时间消耗相对少），&lt;br&gt;基于这一思想的一种算法称为希尔(Shell)排序。&lt;/p&gt;
&lt;p&gt;希尔排序的核心的将序列巧妙的分组成为几个子数组，例如将数组分为h个子数组，那么每个子数组的元素分别为data[h*i+0],data[h*i+1],data[h*i+2]..然后对每个子数组进行排序，&lt;br&gt;对字数组的排序通常就选择基本的排序算法，常见的是选择插入排序算法。完整的希尔排序是进行多轮的子数组切分：&lt;br&gt;h&lt;sub&gt;1&lt;/sub&gt;，h&lt;sub&gt;2&lt;/sub&gt;…h&lt;sub&gt;i&lt;/sub&gt;，h&lt;sub&gt;1&lt;/sub&gt;为1，即最后一次排序是对所有的元素进行排序。&lt;br&gt;h&lt;sub&gt;i&lt;/sub&gt;之间通常满足关系 h&lt;sub&gt;1&lt;/sub&gt; = 1; h&lt;sub&gt;i+1&lt;/sub&gt; = h&lt;sub&gt;i&lt;/sub&gt; * 3 + 1;&lt;br&gt;取h分别为5、3、1时，对数组[6,3,5,7,9,10,2,1,4,8]的一次排序过程如图示：&lt;br&gt;&lt;img src=&quot;http://7xrny8.com1.z0.glb.clouddn.com/blog/1457454552849.png&quot; width=&quot;729&quot;&gt;&lt;/p&gt;
&lt;p&gt;当h=5时，将元数组分成了5个子数组，第一个子数组为[6,10],对其排序，第二个子数组为[3，2]，对其排序，依次完成5个子数组的排序后如图中h=5那行，然后取h=3，将数组分成3个子数组，&lt;br&gt;第一个子数组为[6,4,3,9],对其进行排序，第二个子数组为[2,8,5],对其进行排序，第三个子数组为[1,10,7],对其进行排序，完成之后如图中h=3那行，最后h=1，&lt;br&gt;对数组进行排序。广泛的经验性研究表明，希尔排序的时间复杂度为O(nlgn)。&lt;/p&gt;
&lt;h3 id=&quot;堆排序&quot;&gt;&lt;a href=&quot;#堆排序&quot; class=&quot;headerlink&quot; title=&quot;堆排序&quot;&gt;&lt;/a&gt;堆排序&lt;/h3&gt;&lt;p&gt;我们知道选择排序要执行O(n&lt;sup&gt;2&lt;/sup&gt;)次比较，效率很低，尤其是n很大的情况，但是它也有一个有点就是执行较少次数的数据移动操作。如果对选择排序算法的选择部分做&lt;br&gt;一些改进，那么很有希望能提高算法效率。堆排序就是基于这一思想而形成的算法，他选择元素中最大的元素将其放置的数组最尾端，然后选择次大的元素将其放置到数组最尾端的前一个位置，&lt;br&gt;依次进行下去，则可以将数组按升序排列。堆排序使用了堆这种数据结构，堆具有以下2个特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个节点都不会小于其子节点&lt;/li&gt;
&lt;li&gt;树是一个完全平衡树(任何节点的子树高度差都是0或1，所有叶子节点都出现在一个或两个层次上)，最低层的叶子节点都位于左边位置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据堆的第一个性质，我们可以在排序的时候每次都取堆的根节点放置于已排序的数组部分，并把堆的最后一个节点放置在堆的根节点的位置，从堆中删除最后一个节点位置，&lt;br&gt;然后将其下移，恢复堆的性质，依次进行则可以完成排序。因此堆排序可以分为两个步骤，第一步先将数组构建成一个堆，构建堆的方法可以使用自底向顶的方式，伪代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; 最后一个非叶子节点 到 根节点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p = 该节点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; p不是叶子节点，并且p 小于其中一个子节点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        将p与较大的子节点交换&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第二步对堆进行排序操作，每次都选择根节点，与最后一个节点交换，然后从堆中去除最后一个子节点，将根节点下移，恢复堆的性质，伪代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; 根节点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    根节点与堆的最后一个节点互换&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    堆数组的长度减一&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p = 根节点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; p不是叶子节点，并且p 小于其中一个子节点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        将p 与较大的子节点交换&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;堆排序的复杂度为O(nlgn)&lt;/p&gt;
&lt;h3 id=&quot;快速排序&quot;&gt;&lt;a href=&quot;#快速排序&quot; class=&quot;headerlink&quot; title=&quot;快速排序&quot;&gt;&lt;/a&gt;快速排序&lt;/h3&gt;&lt;p&gt;在前面简介希尔排序的时候，一个基本的思想是不断的对数组进行切分，仅对每个子数组进行排序，基于这种思想C.A.R.Hoare也发明了一种算法，&lt;br&gt;称为快速排序。快速排序的基本流程是选择一个数组中的值作为阈值，小于该值的所有元素组成一个子数组，大于该值的作为另一个子数组，划分完之后&lt;br&gt;再对两个子数组做同样的处理，直到子数组只包含一个元素时，那么该数组就完成好了排序。快速排序思想本身是递归的，那么该算法的实现使用递归也十分容易实现。&lt;br&gt;一种简单的实现伪代码如下：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;quicksort(&lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;长度大于&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        选择一个元素作为阈值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;中的元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; 大于阈值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                该元素划到子数组&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; 小于阈值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                该元素划到子数组&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        quicksort 子数组&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        quicksort 子数组&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;伪代码所描述的实现方式需要额外的空间来存储子数组，因此的真正的实现过程中，都是直接在原数组中进行元素的移动来完成，如果每次都去数组的第一个元素作为阈值，&lt;br&gt;一个快速排序的流程如图：&lt;br&gt;&lt;img src=&quot;http://7xrny8.com1.z0.glb.clouddn.com/blog/1457454581498.png&quot; width=&quot;782&quot;&gt;&lt;/p&gt;
&lt;p&gt;如图对数组[7,2,9,3,8,4]进行排序，首先选择第一个元素作为阈值，lower和upper指针分别指向数组的始端和尾端，然后从upper指向的元素与阈值做比较，其为4，小于阈值&lt;br&gt;需要放在子数组1中，因此与lower指向的元素进行交换，交换之后lower指针自增1，然后取lower指向的元素2与阈值比较，其小于阈值，不用交换，lower加1，然后取9与阈值比较，&lt;br&gt;其大于阈值，应该放在子数组2中，因此与upper指向的元素交换，交换之后upper自减1，然后再去upper指向的元素8与阈值比较，大于阈值，不用交换，upper减1，取3与阈值比较，&lt;br&gt;小于阈值，与lower指向的元素交换，lower加1，此时lower与upper相等，说明所有的元素均与阈值进行过一次比较，结束循环，将阈值赋值给upper指向的元素，然后再对两个字数组&lt;br&gt;进行同样的操作。&lt;/p&gt;
&lt;p&gt;快速排序算法的时间复杂度是O(nlgn)，在最坏情况下的算法复杂度为O(n&lt;sup&gt;2&lt;/sup&gt;)。&lt;/p&gt;
&lt;h3 id=&quot;归并排序&quot;&gt;&lt;a href=&quot;#归并排序&quot; class=&quot;headerlink&quot; title=&quot;归并排序&quot;&gt;&lt;/a&gt;归并排序&lt;/h3&gt;&lt;p&gt;在介绍快速排序的时候，其选择阈值的是比较麻烦的，因为阈值的选择关系到是否能将数组均匀的分成两个子数组，子数组的长度差距越大，需要切分子数组的次数就越多，那复杂度就相对的更大。&lt;/p&gt;
&lt;p&gt;为了解决子数组的切分问题，有一种叫做归并排序的算法，归并排序很好的归并了子数组切分的问题，它每次都将数组从数组的中间分成两个子数组，在对子数组进行合并的过程中来实现对数组的排序。以下伪代码表示了归并排序的过程：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mergesort&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; 数组包含两个或以上元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mergesort（数组的左半部分）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mergesort（数组的有半部分）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        merge两个子数组&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;两个子数组的合并过程可以用下面的伪代码表示：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;merge&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; 两个子数组中都还有元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; subarray1 &amp;gt; subarray2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            temparray[i++] = subarray2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            temparray[i++] = subarray1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由上可以看出在合并需要额外的空间来临时存储合并好的数组，有个额外的空间占用。&lt;/p&gt;
&lt;h3 id=&quot;基数排序&quot;&gt;&lt;a href=&quot;#基数排序&quot; class=&quot;headerlink&quot; title=&quot;基数排序&quot;&gt;&lt;/a&gt;基数排序&lt;/h3&gt;&lt;p&gt;基数排序是日常生活中用得很多的一种排序方法，例如英文词典中单词的排列首先按照单词的首字母进行区分，所有A字母开头的单词均排在一起，B开头的单词排在一起，对于同是A字母开头的单词则安装第二个字母用同样的方法进行排序，这种排序方法称为基数排序。&lt;br&gt;对于整数的基数排序有两种基本的方式，一种是按照整数字符从末位开始排序，然后排序次末位，依次进行，直到排序完成，另一种是按照整数的二进制位来进行排序。&lt;/p&gt;
&lt;p&gt;如图是一个简单的按照整数字符对数组 [12,32,122,4,53,345,21,3] 进行基数排序的过程：&lt;br&gt;&lt;img src=&quot;http://7xrny8.com1.z0.glb.clouddn.com/blog/1457454607794.png&quot; width=&quot;769&quot;&gt;&lt;/p&gt;
&lt;p&gt;首先按照每个元素的第一位字符进行分堆，相同字符的处于同一堆，每个堆都是一个对列，然后按照每个堆的顺序输出得到如图‘第一位’后的结果[21,12,32,122,53,3,4,345]，&lt;br&gt;然后对该数组按照第二个字符进行再次分堆，没有第二位字符的整数按照该位为0处理，然后按照堆的顺序以队列的方式输出得到‘第二位’后的结果[3,4,12,21,122,32,345,53],&lt;br&gt;再按照上面的方式对第三位字符进行分堆，当所有元素都处于同一堆时则结束分堆，此时数组也就成为了有序数组。&lt;/p&gt;
&lt;p&gt;基数排序的复杂度是线性的为O(dn)，d为分堆时进行的次数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参考：《数据结构与算法—-C++版(第三版)》，清华大学出版社&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;排序对于处理很多问题都可以提供一些便利，在日常生活中也常常进行排序（城市排名、大学排名、个人财富排名）等等。&lt;br&gt;对于排序算法，更是学习编程肯定会遇到的一种问题，常见的排序算法有：插入排序、冒泡排序、归并排序、堆排序、&lt;br&gt;希尔排序、快速排序等等等，十分丰富和强大。&lt;/
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://arloz.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="sort C++" scheme="http://arloz.github.io/tags/sort-C/"/>
    
  </entry>
  
  <entry>
    <title>链表、栈与队列</title>
    <link href="http://arloz.github.io/2014/09/14/linklist/"/>
    <id>http://arloz.github.io/2014/09/14/linklist/</id>
    <published>2014-09-14T14:46:18.000Z</published>
    <updated>2016-03-08T16:22:05.000Z</updated>
    
    <content type="html">&lt;p&gt;在程序设计中，有几种特别基础而且应用十分广泛的数据结构：链表、栈、队列，&lt;br&gt;从数据结构的逻辑结构的角度讲，他们都属于线性结构，相对于其他的集合结构、树形结构、&lt;br&gt;图结构等，线性结构是十分直观和易于理解的。&lt;/p&gt;
&lt;h3 id=&quot;链表&quot;&gt;&lt;a href=&quot;#链表&quot; class=&quot;headerlink&quot; title=&quot;链表&quot;&gt;&lt;/a&gt;链表&lt;/h3&gt;&lt;p&gt;数组是程序设计语言提供的一种非常有用的数据结构，但是它有一些限制：1、在编译时需要知道其大小；&lt;br&gt;2、数组是在内存中顺序存储的，这就意味着当插入一个元素的时候需要移动其他的数据元素。对于这两种情况，&lt;br&gt;使用链表来代替数据就是非常有用的。&lt;/p&gt;
&lt;p&gt;1、单链表&lt;/p&gt;
&lt;p&gt;链表是由一个个节点（包含数据和指向节点的指针）链接在一起形成的，单链表顾名思义指每个节点都仅有一个指针指向他的后继节点。&lt;br&gt;如图示&lt;br&gt;&lt;img src=&quot;http://7xrny8.com1.z0.glb.clouddn.com/blog/1457453668318.png&quot; width=&quot;487&quot;&gt;&lt;br&gt;其中head指针指向该链表的头结点，当向链表头部添加一个节点时，只需要将新节点的指针指向头结点，再把head指针指向新节点；&lt;br&gt;当向链表尾部添加一个节点时，则需要从head指针向下遍历，直到最后一个节点，并把最后一个节点的指针指向新的节点即可；&lt;br&gt;当删除一个节点时，则需要从head向后遍历，找到要删除的节点，并将需删除的节点的父节点指向其指向的节点，再删除该节点即可；&lt;/p&gt;
&lt;p&gt;2、双链表&lt;/p&gt;
&lt;p&gt;双链表是在单链表的基础上，每个节点再增加一个节点指针指向它的父节点，这样便可以很方便的找到该节点的父节点，在删除的节点&lt;br&gt;的时候可以更加方便，如图示&lt;br&gt;&lt;img src=&quot;http://7xrny8.com1.z0.glb.clouddn.com/blog/1457453628602.png&quot; width=&quot;542&quot;&gt;&lt;/p&gt;
&lt;p&gt;3、循环链表&lt;/p&gt;
&lt;p&gt;循环连接是在单链表的基础上将最后一个节点的指针指向链表的头节点，双循环链表则是在双链表的基础上将最后一个节点的next指针指向头结点，&lt;br&gt;将头结点的pre指针指向最后一个节点&lt;/p&gt;
&lt;h3 id=&quot;栈&quot;&gt;&lt;a href=&quot;#栈&quot; class=&quot;headerlink&quot; title=&quot;栈&quot;&gt;&lt;/a&gt;栈&lt;/h3&gt;&lt;p&gt;栈是一种只能通过一端来实现数据的访问和存储的线性数据结构，它类似与一叠盘子，盘子只能从最顶端放上去，同时也只能从最顶端取出一个。&lt;br&gt;对栈的操作最常见的是进栈（push）和出栈（pop），如图示是一个进栈出栈示意图：&lt;br&gt;&lt;img src=&quot;http://7xrny8.com1.z0.glb.clouddn.com/blog/1457453783175.png&quot; width=&quot;520&quot;&gt;&lt;/p&gt;
&lt;p&gt;栈的直接实现方式是使用一个灵活的数组，也可以通过链表来实现一个栈。&lt;/p&gt;
&lt;h3 id=&quot;队列&quot;&gt;&lt;a href=&quot;#队列&quot; class=&quot;headerlink&quot; title=&quot;队列&quot;&gt;&lt;/a&gt;队列&lt;/h3&gt;&lt;p&gt;队列是一种从一段放入数据，从另一端取出数据的数据结构，可以将其看做一个管道，从一端进，另一端出（First in First out,FIFO）。&lt;br&gt;队列在日常生活中也是特别的常见，银行要排队、食堂要排队等等。对队列的操作最常用的是入队和出队操作。如图示：&lt;br&gt;&lt;img src=&quot;http://7xrny8.com1.z0.glb.clouddn.com/blog/1457453752910.png&quot; width=&quot;454&quot;&gt;&lt;/p&gt;
&lt;p&gt;这种队列的最普通的队列，按照入队的先后顺序出队，但是有情况不按照这种方式出队，如在银行排队遇到VIP客户，则柜台会优先处理，&lt;br&gt;这种不按照入队的先后顺序，而按照每个节点的优先级来决定出队顺序的队列称为优先队列。优先队列可以是在出队的时候挑选所有节点优先级最高的出队，&lt;br&gt;或者在入队的时候按照优先级在合适的位置插入新入队元素。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参考：《数据结构与算法—-C++版(第三版)》，清华大学出版社&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在程序设计中，有几种特别基础而且应用十分广泛的数据结构：链表、栈、队列，&lt;br&gt;从数据结构的逻辑结构的角度讲，他们都属于线性结构，相对于其他的集合结构、树形结构、&lt;br&gt;图结构等，线性结构是十分直观和易于理解的。&lt;/p&gt;
&lt;h3 id=&quot;链表&quot;&gt;&lt;a href=&quot;#链表&quot; 
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://arloz.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Data-Structures C++" scheme="http://arloz.github.io/tags/Data-Structures-C/"/>
    
  </entry>
  
  <entry>
    <title>C++面向对象简记</title>
    <link href="http://arloz.github.io/2014/09/09/cpp-orient/"/>
    <id>http://arloz.github.io/2014/09/09/cpp-orient/</id>
    <published>2014-09-09T02:18:32.000Z</published>
    <updated>2016-03-08T15:19:39.000Z</updated>
    
    <content type="html">&lt;p&gt;面向对象程序设计（OOP）以对象的概念为中心，对象封装了数据和对数据的操作，对象之间通过消息来相互通信，&lt;br&gt;基于对象的结构化程序能够达到几个目的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、这种数据和操作之间的强耦合关系是一种对现实世界的仿真，是对现实的一种建模；&lt;/li&gt;
&lt;li&gt;2、对象更容易debug，因为对象的封装性使得操作都局限在对象内部，容易跟踪；&lt;/li&gt;
&lt;li&gt;3、对象可以隐藏对数据的操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;C++是一种面向对象语言，具有很多面向对象的特性，以下做一些简单的记录。&lt;strong&gt;&lt;em&gt;才疏学浅，&lt;br&gt;理解有误的地方还请指正&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-类和对象&quot;&gt;&lt;a href=&quot;#1-类和对象&quot; class=&quot;headerlink&quot; title=&quot;1.类和对象&quot;&gt;&lt;/a&gt;1.类和对象&lt;/h3&gt;&lt;p&gt;C++中的类通过关键字&lt;code&gt;class&lt;/code&gt;来定义，类中定义的变量称为成员变量或属性，定义的函数称为成员函数或方法，&lt;br&gt;通过类来定义一个变量称为一个对象实例，类的方法可以通过实例来调用。&lt;br&gt;以下是一个简单的类和对象的定义、方法调用。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 定义一个类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class A&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;private:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char name[32];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    A(char *s=&quot;&quot;,int i=0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        strcpy(name,s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        age = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void hello()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cout&amp;lt;&amp;lt;name&amp;lt;&amp;lt;&quot; is &quot;&amp;lt;&amp;lt;age&amp;lt;&amp;lt;&quot; years old.&quot;&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 定义类的对象实例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A obj1(&quot;Bob&quot;,12),obj2(&quot;Lucy&quot;,13);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 调用类方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj1.hello();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj2.hello();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-继承&quot;&gt;&lt;a href=&quot;#2-继承&quot; class=&quot;headerlink&quot; title=&quot;2.继承&quot;&gt;&lt;/a&gt;2.继承&lt;/h3&gt;&lt;p&gt;OOL允许创建类的层次关系，所以一个对象不一定是单一类的实例，如下代码。&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 类的继承关系&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Base&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; name[&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Base()&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Base(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* s=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ii=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;strcpy&lt;/span&gt;(name,s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            age = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            id = ii;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;Base construct&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;Base hello: &quot;&lt;/span&gt;&amp;lt;&amp;lt;name&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot; is &quot;&lt;/span&gt;&amp;lt;&amp;lt;age&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot; years old.&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Student:&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Base&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; school[&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Student(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* s=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ii=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* sch=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;):Base(s,i,ii)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;strcpy&lt;/span&gt;(school,sch);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;Student construct&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Base::hello();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;Student hello: &quot;&lt;/span&gt;&amp;lt;&amp;lt;name&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot; is &quot;&lt;/span&gt;&amp;lt;&amp;lt;age&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot; years old.&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot; in school: &quot;&lt;/span&gt;&amp;lt;&amp;lt;school&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//cout&amp;lt;&amp;lt;&quot;the id is: &quot;&amp;lt;&amp;lt;id&amp;lt;&amp;lt;endl; // ERROR: id is a private member of Base&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Worker:&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Base&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; companay[&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Worker(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* s=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ii=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* com=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;):Base(s,i,ii)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;strcpy&lt;/span&gt;(companay,com);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;Worker construct&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;Worker hello: &quot;&lt;/span&gt;&amp;lt;&amp;lt;name&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot; is &quot;&lt;/span&gt;&amp;lt;&amp;lt;age&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot; years old.&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot; in companay: &quot;&lt;/span&gt;&amp;lt;&amp;lt;companay&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 类的继承&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;Student &lt;span class=&quot;title&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;studentA&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;tju&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;Worker &lt;span class=&quot;title&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;workerB&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10001&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;baidu&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;w.hello();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s.hello();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;w.name&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//cout&amp;lt;&amp;lt;s.name&amp;lt;&amp;lt;endl;// ERROR: Student is protected extend from Base class&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;类Base称为基类或超类，其他的类称为子类或派生类，因为他们都是从基类继承而来，在从基类继承的时候可以指定为&lt;br&gt;protected或者public继承，子类继承了基类的所有数据成员和成员函数，不需要重复定义，同时也可以定义自己的&lt;br&gt;数据成员和成员函数。类中的成员(数据成员和成员函数)的访问限制如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;public成员：类自身、子类和类的对象实例可以访问&lt;/li&gt;
&lt;li&gt;protected成员：类自身和子类可以访问&lt;/li&gt;
&lt;li&gt;private成员：仅类自身可以访问&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;子类继承父类之后，父类的成员的private、protected、public修饰的变化：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;public继承：父类的所有成员保持原修饰不变&lt;/li&gt;
&lt;li&gt;protected继承：父类的public修饰的成员变为protected修饰，其他的保持不变&lt;/li&gt;
&lt;li&gt;private继承：父类的所有成员变为private修饰&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-指针&quot;&gt;&lt;a href=&quot;#3-指针&quot; class=&quot;headerlink&quot; title=&quot;3.指针&quot;&gt;&lt;/a&gt;3.指针&lt;/h3&gt;&lt;p&gt;形象的我们可以把程序中的变量看做一个不为空的盒子，在定义时由程序员填上一些内容或者由系统填上默认的内容。&lt;br&gt;这样一个变量就至少具有了两种属性：内容（变量的值）和位置（变量的内存地址），内容可以是数字、字符或复杂的数据结构，&lt;br&gt;当然内容也可以是另一个变量的位置，具有这种内容的变量就称为指针。&lt;br&gt;举个例子，声明变量如下：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;, j, *p, *q;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中i,j都是数值型的变量，p,q都是指向数值的指针。将变量i的地址赋值给指针p：&lt;code&gt;p = &amp;amp;i&lt;/code&gt;，此时p指向变量i在内存中的存储地址，&lt;br&gt;该地址处存储的值为15，同时可以给指针q赋值：&lt;code&gt;q = p&lt;/code&gt;，此时将p指向的地址赋值给了q，这样q和p指向同样的位置。通过指针修改&lt;br&gt;其指向变量的值可以：&lt;code&gt;*p = 20&lt;/code&gt;，此时变量i的值为20。&lt;/p&gt;
&lt;p&gt;上面指针是指向了一个整数变量内存块，同样指针也可以指向一个动态创建的数据结构。在C++中数组的大小是必须提前定义的，如：&lt;br&gt;&lt;code&gt;int a[5],*p;&lt;/code&gt;。有很多情况下是不能够提前知道数组大小的，这样就需要能够在程序运行时动态的开辟数组的大小，在C++中可以&lt;br&gt;使用new关键字，如：&lt;code&gt;int* a = new int[n]&lt;/code&gt;，这样分配了n个int空间的数组，当不再使用该数组时需要释放分配的存储空间，如：&lt;br&gt;&lt;code&gt;delete [] p;&lt;/code&gt;，这里的括号表示p是指向一个数组。&lt;/p&gt;
&lt;p&gt;当将数据从一个对象复制到另一个对象的时候，包含指针数据成员的需要做一些特殊的处理，否则就会有一些问题。如下定义：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 指针和复制构造函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;struct Node&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char *name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Node(char* s=&quot;&quot;,int a=0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name = strdup(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        age = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 指针和复制构造函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Node node1(&quot;kobe&quot;,20),node2(node1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cout&amp;lt;&amp;lt;&quot;node1 &quot;&amp;lt;&amp;lt;node1.name&amp;lt;&amp;lt;&quot; &quot;&amp;lt;&amp;lt;node1.age&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cout&amp;lt;&amp;lt;&quot;node2 &quot;&amp;lt;&amp;lt;node2.name&amp;lt;&amp;lt;&quot; &quot;&amp;lt;&amp;lt;node2.age&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// output&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// node1 kobe 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// node2 kobe 20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;strcpy(node1.name,&quot;john&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node1.age = 23;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cout&amp;lt;&amp;lt;&quot;node1 &quot;&amp;lt;&amp;lt;node1.name&amp;lt;&amp;lt;&quot; &quot;&amp;lt;&amp;lt;node1.age&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cout&amp;lt;&amp;lt;&quot;node2 &quot;&amp;lt;&amp;lt;node2.name&amp;lt;&amp;lt;&quot; &quot;&amp;lt;&amp;lt;node2.age&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// output&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// node1 john 23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// node2 john 20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由上可知，改变了node1的name值的同时也改变了node2的name的值，这是因为在定义node2的时候&lt;code&gt;Node node2(node1);&lt;/code&gt;，将node1的数据成员name的值（也就是指向name字符串的地址）赋值给了node2的name，这样node1和node2的数据成员name则指向了同样的内存地址，当修改node1的name指向的字符串时&lt;code&gt;strcpy(node1.name,&amp;quot;john&amp;quot;)&lt;/code&gt;，node2的name指向的值也随着改变了。要解决这个问题就需要在Node的构造函数中做一些修改，如下，这样node1复制给node2的数据成员name就是其指向的值而不是其保存的地址。注意，常见的赋值操作&lt;code&gt;=&lt;/code&gt;,也存在这样的问题，因此需要重载赋值操作符。同样，对于指针数据成员，类的析构函数也需要做相应的处理，在析构函数中需要调用&lt;code&gt;delete&lt;/code&gt;删除指针数据成员所指向的内存。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; Node&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Node(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* s=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name = strdup(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        age = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 构造函数的指针复制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Node(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Node &amp;amp;n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name = strdup(n.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        age = n.age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 指针数据成员的赋值操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Node&amp;amp; &lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt; = (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Node&amp;amp; n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; != &amp;amp;n)&amp;#123; &lt;span class=&quot;comment&quot;&gt;// no assignment to it self&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(name != null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; [] name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name = strdup(n.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            age = n.age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; *&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;4-多态&quot;&gt;&lt;a href=&quot;#4-多态&quot; class=&quot;headerlink&quot; title=&quot;4.多态&quot;&gt;&lt;/a&gt;4.多态&lt;/h3&gt;&lt;p&gt;多态性指同样的函数名称表示很多的函数，这些函数是不同对象的成员函数。如下例子：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 多态性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ClassA&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;hello in ClassA&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bye&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;bye in ClassA&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ClassB&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;hello in ClassB&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bye&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;bye in ClassB&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ClassC&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hi&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;hi in ClassC&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 多态性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ClassA obja,*p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ClassB objb;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ClassC objc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p = &amp;amp;obja;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p-&amp;gt;hello();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p-&amp;gt;bye();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p = (ClassA*) &amp;amp;objb;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p-&amp;gt;hello();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p-&amp;gt;bye();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p = (ClassA*) &amp;amp;objc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//p-&amp;gt;hello(); // ERROR: segmentation fault&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p-&amp;gt;bye();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//p-&amp;gt;hi();// ERROR: no member named &#39;hi&#39; in ClassA&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;分别声明了类ClassA、ClassB、ClassC的三个对象obja、objb、objc和一个ClassA类型的指针p，首先将obja对象地址赋值给指针p，&lt;br&gt;这样通过p调用函数hello和bye均为分别调用ClassA的函数成员，这也是常见的一种使用方式；其次将objb对象赋值给指针p，这样通过&lt;br&gt;p调用hello和bye函数时，由于hello函数是定义为virtual函数的，此时将根据当前p执行的对象类型来决定调用哪个类的方法，&lt;br&gt;此时p是指向的ClassB类型，所以调用ClassB中的hello，而由于bye函数不是虚函数，则其在编译时已经确定了，p声明时是ClassA类型，&lt;br&gt;所以调用ClassA中的函数bye；最后将objc对方赋值给指针p，此时由于ClassC中没有定义虚函数hello，当程序执行到此处时，找不到ClassC的hello函数&lt;br&gt;则会出现segmentation fault错误，调用bye函数则是在编译时已经确定的调用ClassA中的bye函数，调用ClassC中定义的hi函数时，&lt;br&gt;由于p指针是ClassA类型，所以在编译时已经确定了调用ClassA中的hi函数，由于ClassA没有定义改函数，则在编译会提示错误。&lt;/p&gt;
&lt;p&gt;多态性是OOP中的一种强大且复杂的功能，通过该特性可以将同一个消息发送给很多不同的对象，而不需要指定如何处理消息，也不需要指定对象的类型。&lt;/p&gt;
&lt;h3 id=&quot;5-标准模板库STL&quot;&gt;&lt;a href=&quot;#5-标准模板库STL&quot; class=&quot;headerlink&quot; title=&quot;5.标准模板库STL&quot;&gt;&lt;/a&gt;5.标准模板库STL&lt;/h3&gt;&lt;p&gt;C++是一种面向对象的程序设计语言，得到了广泛的应用，其中也包含了程序员最常用的一些数据结构和算法，&lt;br&gt;这个库就是&lt;a href=&quot;http://zh.wikipedia.org/wiki/标准模板库&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;标准模板库STL&lt;/a&gt;。&lt;br&gt;这个库包含了3中通用的实体：容器、迭代器和算法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;参考：《数据结构与算法—-C++版(第三版)》，清华大学出版社&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;面向对象程序设计（OOP）以对象的概念为中心，对象封装了数据和对数据的操作，对象之间通过消息来相互通信，&lt;br&gt;基于对象的结构化程序能够达到几个目的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、这种数据和操作之间的强耦合关系是一种对现实世界的仿真，是对现实的一种建模；&lt;/li&gt;
&lt;li
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://arloz.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++ OOP" scheme="http://arloz.github.io/tags/C-OOP/"/>
    
  </entry>
  
  <entry>
    <title>tornado+nginx上传视频文件</title>
    <link href="http://arloz.github.io/2014/06/27/upload-file-tornado/"/>
    <id>http://arloz.github.io/2014/06/27/upload-file-tornado/</id>
    <published>2014-06-27T09:04:36.000Z</published>
    <updated>2016-03-08T15:12:05.000Z</updated>
    
    <content type="html">&lt;p&gt;由于tornado通过表达上传的数据最大限制在100M，所以如果需要上传视屏文件的情况在需要通过其他方式实现，&lt;br&gt;此处采用nginx的&lt;a href=&quot;http://www.grid.net.ru/nginx/upload.en.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nginx-upload-module&lt;/a&gt;和&lt;a href=&quot;https://github.com/blueimp/jQuery-File-Upload&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jQuery-File-Upload&lt;/a&gt;实现。&lt;/p&gt;
&lt;h3 id=&quot;1-编译安装nginx-upload-module&quot;&gt;&lt;a href=&quot;#1-编译安装nginx-upload-module&quot; class=&quot;headerlink&quot; title=&quot;1.编译安装nginx-upload-module&quot;&gt;&lt;/a&gt;1.编译安装nginx-upload-module&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;下载nginx-1.5.8&lt;/li&gt;
&lt;li&gt;下载nginx-upload-module2.0&lt;/li&gt;
&lt;li&gt;由于nginx-upload-module不支持最新版的nginx，直接编译会出错，需要打补丁 &lt;a href=&quot;http://paste.davromaniak.eu/index.php?show=110&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;davromaniak.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ tar xzf nginx-1.5.8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ tar xzf nginx_upload_module-2.0.12.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; nginx_upload_moule-2.0.12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ patch ngx_http_upload_module.c davromaniak.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ../nginx-1.5.8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ./configure --add-module=../nginx_upload_moule-2.0.12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ make &amp;amp; sudo make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-配置nginx的upload-module&quot;&gt;&lt;a href=&quot;#2-配置nginx的upload-module&quot; class=&quot;headerlink&quot; title=&quot;2.配置nginx的upload-module&quot;&gt;&lt;/a&gt;2.配置nginx的upload-module&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;upstream tornadoserver&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server 127.0.0.1:8001;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;listen       8080;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server_name  localhost;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_pass_header Server;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_set_header Host $http_host;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_redirect off;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_set_header X-Real-IP $remote_addr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_set_header X-Scheme $scheme;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_pass http://tornadoserver;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;client_max_body_size 4G;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;client_body_buffer_size 1024k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ($host !~* ^(localhost) ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location = /uploads &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if ($request_method = OPTIONS) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add_header Pragma no-cache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add_header X-Content-Type-Options nosniff;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # Access control for CORS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add_header Access-Control-Allow-Origin &amp;quot;http://localhost&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add_header Access-Control-Allow-Methods &amp;quot;GET, POST, PUT, DELETE, OPTIONS&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add_header Access-Control-Allow-Headers &amp;quot;cache-control, content-range, accept,\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            origin, session-id, content-disposition, x-requested-with, ctent-type,\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            content-description, referer, user-agent&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add_header Access-Control-Allow-Credentials &amp;quot;true&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 10 minute pre-flight approval&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add_header Access-Control-Max-Age 600;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return 204;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if ($request_method = POST) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add_header Pragma no-cache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add_header X-Content-Type-Options nosniff;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #add_header Cache-control &amp;quot;no-story, no-cache, must-revalidate&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # Access control for CORS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add_header Access-Control-Allow-Origin &amp;quot;http://localhost&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add_header Access-Control-Allow-Methods &amp;quot;GET, POST, PUT, DELETE, OPTIONS&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add_header Access-Control-Allow-Headers &amp;quot;cache-control, content-range, accept,\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                origin, session-id, content-disposition, x-requested-with,\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                content-type, content-description, referer, user-agent&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add_header Access-Control-Allow-Credentials &amp;quot;true&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        # 10 minute pre-flight approval&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add_header Access-Control-Max-Age 600;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        upload_set_form_field $upload_field_name.name &amp;quot;$upload_file_name&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        upload_set_form_field $upload_field_name.content_type &amp;quot;$upload_content_type&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        upload_set_form_field $upload_field_name.path &amp;quot;$upload_tmp_path&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        upload_pass_form_field &amp;quot;^X-Progress-ID$|^authenticity_token$&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        upload_cleanup 400 404 499 500-505;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upload_pass @fast_upload_endpoint;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # &amp;#123;a..z&amp;#125; not usefull when use zsh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # mkdir &amp;#123;1..9&amp;#125; &amp;#123;a..z&amp;#125; &amp;#123;A..Z&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upload_store /tmp/uploads 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # set permissions on the uploaded files&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upload_store_access user:rw group:rw all:r;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location @fast_upload_endpoint &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_set_header X-Forwarded-Proto $scheme;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_set_header Host $http_host;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_redirect off;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_pass_header &amp;apos;Access-Control-Allow-Origin&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_pass http://tornadoserver;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-demo页面&quot;&gt;&lt;a href=&quot;#3-demo页面&quot; class=&quot;headerlink&quot; title=&quot;3.demo页面&quot;&gt;&lt;/a&gt;3.demo页面&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE HTML&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;head&amp;gt; &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;title&amp;gt;jQuery File Upload Example&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .bar &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height: 18px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background: green;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;input id=&quot;fileupload&quot; type=&quot;file&quot; name=&quot;files[]&quot; data-url=&quot;uploads&quot; multiple&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;script src=&quot;&amp;#123;&amp;#123;static_url(&#39;js/jquery-1.10.2.min.js&#39;)&amp;#125;&amp;#125;&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;script src=&quot;/static/js/vendor/jquery.ui.widget.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;script src=&quot;/static/js/jquery.iframe-transport.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;script src=&quot;/static/js/jquery.fileupload.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(&#39;#fileupload&#39;).fileupload(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dataType: &#39;json&#39;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                done: function (e, data) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    $.each(data.result.files, function (index, file) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       $(&#39;&amp;lt;p/&amp;gt;&#39;).text(file.name+&quot;  &quot;+file.size).appendTo(document.body);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                progressall: function (e, data) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    var progress = parseInt(data.loaded / data.total * 100, 10);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    $(&#39;#progress .bar&#39;).css( &#39;width&#39;, progress + &#39;%&#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div id=&quot;progress&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;div class=&quot;bar&quot; style=&quot;width: 10%;&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;4-tornado处理&quot;&gt;&lt;a href=&quot;#4-tornado处理&quot; class=&quot;headerlink&quot; title=&quot;4.tornado处理&quot;&gt;&lt;/a&gt;4.tornado处理&lt;/h3&gt;&lt;p&gt;当nginx的upload-module完成视频文件的传输之后，其会设置表单数据，并转发给后台tornado服务器处理。&lt;/p&gt;
&lt;p&gt;通过如下方式获得相关参数：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;name = self.get_argument(&lt;span class=&quot;string&quot;&gt;&quot;files[].name&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;content_type = self.get_argument(&lt;span class=&quot;string&quot;&gt;&quot;files[].content_type&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;oldpath = self.get_argument(&lt;span class=&quot;string&quot;&gt;&quot;files[].path&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;size = os.path.getsize(oldpath)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;files = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;files.append(&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;:name,&lt;span class=&quot;string&quot;&gt;&quot;type&quot;&lt;/span&gt;:content_type,&lt;span class=&quot;string&quot;&gt;&quot;size&quot;&lt;/span&gt;:size&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ret = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;files&quot;&lt;/span&gt;:files&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;self.write(tornado.escape.json_encode(ret))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;由于tornado通过表达上传的数据最大限制在100M，所以如果需要上传视屏文件的情况在需要通过其他方式实现，&lt;br&gt;此处采用nginx的&lt;a href=&quot;http://www.grid.net.ru/nginx/upload.en.html&quot; target=&quot;_blank
    
    </summary>
    
      <category term="tornado" scheme="http://arloz.github.io/categories/tornado/"/>
    
    
      <category term="tornado upload-file jquery" scheme="http://arloz.github.io/tags/tornado-upload-file-jquery/"/>
    
  </entry>
  
  <entry>
    <title>部署HTTP服务的git</title>
    <link href="http://arloz.github.io/2014/05/16/deploy-http-git/"/>
    <id>http://arloz.github.io/2014/05/16/deploy-http-git/</id>
    <published>2014-05-16T09:21:53.000Z</published>
    <updated>2016-03-08T15:08:20.000Z</updated>
    
    <content type="html">&lt;p&gt;最近使用git的频率不断增加，需要与人共享git工程，如果使用原生的git协议进行访问的话不是特别方便，因此着手通过部署HTTP服务来实现git的管理，一些配置如下介绍。&lt;/p&gt;
&lt;h3 id=&quot;1-系统环境&quot;&gt;&lt;a href=&quot;#1-系统环境&quot; class=&quot;headerlink&quot; title=&quot;1.系统环境&quot;&gt;&lt;/a&gt;1.系统环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;ubuntu12.04&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-安装&quot;&gt;&lt;a href=&quot;#2-安装&quot; class=&quot;headerlink&quot; title=&quot;2.安装&quot;&gt;&lt;/a&gt;2.安装&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install git git-core apache2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /etc/apache2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo a2enmod dav dav_fs dav_lock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo a2enmod auth_digist&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-初始化git仓库&quot;&gt;&lt;a href=&quot;#3-初始化git仓库&quot; class=&quot;headerlink&quot; title=&quot;3.初始化git仓库&quot;&gt;&lt;/a&gt;3.初始化git仓库&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /home &amp;amp; mkdir git &amp;amp; &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; git &amp;amp; mkdir test.git &amp;amp; &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; test.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git --bare init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mv hooks/post-update.sapmle hooks/post-update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ chmod a+x hooks/post-update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ./hooks/post-update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;4-apache配置&quot;&gt;&lt;a href=&quot;#4-apache配置&quot; class=&quot;headerlink&quot; title=&quot;4.apache配置&quot;&gt;&lt;/a&gt;4.apache配置&lt;/h3&gt;&lt;p&gt;在site-available下新建 git，内容如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Servername localhost&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SetEnv GIT_HTTP_EXPORT_ALL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SetEnv GIT_PROJECT_ROOT /home/git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ScriptAlias /git/ /usr/lib/git-core/git-http-backend/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Location /git&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Dav on&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Options +Indexes +FollowSymLinks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #AllowOverride None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Order Allow,Deny&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Allow from all&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AuthType Digest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AuthName &amp;quot;git&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AuthDigestDomain git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AuthUserFile /home/git/git.htpasswd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Require valid-user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/Location&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;添加密码(第二次添加时不用加 -c)&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ htdigest -c ./git.htpasswd git name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo service apache2 restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;5-使用&quot;&gt;&lt;a href=&quot;#5-使用&quot; class=&quot;headerlink&quot; title=&quot;5.使用&quot;&gt;&lt;/a&gt;5.使用&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git clone http://username:password@localhost/git/test.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;忽略ssl临时：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ env  GIT_SSL_NO_VERIFY=true git clone https://username:passwd@localhost/git/test.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;配置：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git config  http.sslVerify false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;refs&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/dudu/archive/2012/12/09/linux-apache-git.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在Linux上用Apache搭建Git服务器&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近使用git的频率不断增加，需要与人共享git工程，如果使用原生的git协议进行访问的话不是特别方便，因此着手通过部署HTTP服务来实现git的管理，一些配置如下介绍。&lt;/p&gt;
&lt;h3 id=&quot;1-系统环境&quot;&gt;&lt;a href=&quot;#1-系统环境&quot; class=&quot;header
    
    </summary>
    
      <category term="install&configure" scheme="http://arloz.github.io/categories/install-configure/"/>
    
    
      <category term="git apache nginx" scheme="http://arloz.github.io/tags/git-apache-nginx/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown 标记语法简介</title>
    <link href="http://arloz.github.io/2014/05/11/markdown-desc/"/>
    <id>http://arloz.github.io/2014/05/11/markdown-desc/</id>
    <published>2014-05-11T09:21:53.000Z</published>
    <updated>2016-03-08T15:03:55.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://zh.wikipedia.org/zh-cn/Markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown&lt;/a&gt;作为一种轻量级的标记语言，十分的易读易写。正苦于没有足够简单的文档编辑工具，经朋友的简介也开始用之。&lt;/p&gt;
&lt;p&gt;下面就对其标记语法做一下简单的记录。&lt;/p&gt;
&lt;h2 id=&quot;多级标题&quot;&gt;&lt;a href=&quot;#多级标题&quot; class=&quot;headerlink&quot; title=&quot;多级标题&quot;&gt;&lt;/a&gt;多级标题&lt;/h2&gt;&lt;h2 id=&quot;title2-title2&quot;&gt;&lt;a href=&quot;#title2-title2&quot; class=&quot;headerlink&quot; title=&quot;title2    ##title2&quot;&gt;&lt;/a&gt;title2    &lt;code&gt;##title2&lt;/code&gt;&lt;/h2&gt;&lt;h3 id=&quot;title3-title3&quot;&gt;&lt;a href=&quot;#title3-title3&quot; class=&quot;headerlink&quot; title=&quot;title3   ###title3&quot;&gt;&lt;/a&gt;title3   &lt;code&gt;###title3&lt;/code&gt;&lt;/h3&gt;&lt;h4 id=&quot;title4-title4&quot;&gt;&lt;a href=&quot;#title4-title4&quot; class=&quot;headerlink&quot; title=&quot;title4   ###title4&quot;&gt;&lt;/a&gt;title4   &lt;code&gt;###title4&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;同时也可使用三个或三个以上的&lt;code&gt;=&lt;/code&gt;表示一级标题;&lt;br&gt;使用三个或三个以上的&lt;code&gt;-&lt;/code&gt;表示二级标题&lt;/p&gt;
&lt;h2 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h2&gt;&lt;p&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;用于生成一段引用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是一段引用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h2&gt;&lt;p&gt;可使用&lt;code&gt;+ - *&lt;/code&gt;符号之一加空格生成无序列表&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;list1     &lt;code&gt;* list1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;list2     &lt;code&gt;- list2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;list3     &lt;code&gt;+ list3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用&lt;code&gt;1. 2. 3. ......&lt;/code&gt;之一加空格生成有序列表&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;list1    &lt;code&gt;1. list1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;list2    &lt;code&gt;2. list2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;list3    &lt;code&gt;3. list3&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;代码区块&quot;&gt;&lt;a href=&quot;#代码区块&quot; class=&quot;headerlink&quot; title=&quot;代码区块&quot;&gt;&lt;/a&gt;代码区块&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;&amp;#39;&lt;/code&gt;符号(ESC下方的按键)包裹一段文字可生成代码块&lt;/p&gt;
&lt;p&gt;通过一个tab缩进生成一个代码块&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 通过tab缩进生成代码块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;hello world\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;分割线&quot;&gt;&lt;a href=&quot;#分割线&quot; class=&quot;headerlink&quot; title=&quot;分割线&quot;&gt;&lt;/a&gt;分割线&lt;/h2&gt;&lt;p&gt;三个或三个以上的 &lt;code&gt;---&lt;/code&gt; or &lt;code&gt;***&lt;/code&gt; 可生成一条分割线&lt;/p&gt;
&lt;h2 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h2&gt;&lt;p&gt;一个链接由一对方括号和一对圆括号构成：&lt;code&gt;[link](http://qlzhang.github.io &amp;quot;Title&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;定义一个链接在多处使用&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[id]: http://arloz.github.io &amp;quot;Title&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[link1][id]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[link2][id]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中id定义的冒号后需有一个空格&lt;/p&gt;
&lt;h2 id=&quot;强调&quot;&gt;&lt;a href=&quot;#强调&quot; class=&quot;headerlink&quot; title=&quot;强调&quot;&gt;&lt;/a&gt;强调&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;_&lt;/code&gt;或&lt;code&gt;*&lt;/code&gt;包裹一段文字可以生成&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;效果的 &lt;em&gt;强调&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;可使用2个或3个&lt;code&gt;_&lt;/code&gt;或&lt;code&gt;*&lt;/code&gt;表示 &lt;strong&gt;加重强调&lt;/strong&gt; 和 &lt;strong&gt;&lt;em&gt;特别强调&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;图片&quot;&gt;&lt;a href=&quot;#图片&quot; class=&quot;headerlink&quot; title=&quot;图片&quot;&gt;&lt;/a&gt;图片&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;![Alt text](/path/to/img)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在一个链接前加上感叹好可在文档中插入图片&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://zh.wikipedia.org/zh-cn/Markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown&lt;/a&gt;作为一种轻量级的标记语言，十分的易读易写。正苦于没有足够简单的文档编辑工具，经朋友的简介也
    
    </summary>
    
      <category term="杂七杂八" scheme="http://arloz.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"/>
    
    
      <category term="Markdown markup git" scheme="http://arloz.github.io/tags/Markdown-markup-git/"/>
    
  </entry>
  
</feed>
